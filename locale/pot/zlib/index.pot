# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Doug Hellmann
# This file is distributed under the same license as the PyMOTW-3 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMOTW-3 \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-15 15:56-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/zlib/index.rst:3
msgid "zlib --- GNU zlib Compression"
msgstr ""

#: ../../source/zlib/index.rst:8
msgid "Low-level access to GNU zlib compression library"
msgstr ""

#: ../../source/zlib/index.rst:10
msgid "The ``zlib`` module provides a lower-level interface to many of the functions in the ``zlib`` compression library from the GNU project."
msgstr ""

#: ../../source/zlib/index.rst:14
msgid "Working with Data in Memory"
msgstr ""

#: ../../source/zlib/index.rst:16
msgid "The simplest way to work with ``zlib`` requires holding all of the data to be compressed or decompressed in memory."
msgstr ""

#: ../../source/zlib/index.rst:0
msgid "zlib_memory.py"
msgstr ""

#: ../../source/zlib/index.rst:23
msgid "The ``compress()`` and ``decompress()`` functions both take a byte sequence argument and return a byte sequence."
msgstr ""

#: ../../source/zlib/index.rst:41
msgid "The previous example demonstrates that the compressed version of small amounts of data can be larger than the uncompressed version.  While the actual results depend on the input data, it is interesting to observe the compression overhead for small data sets"
msgstr ""

#: ../../source/zlib/index.rst:0
msgid "zlib_lengths.py"
msgstr ""

#: ../../source/zlib/index.rst:50
msgid "The ``*`` in the output highlight the lines where the compressed data takes up more memory than the uncompressed version."
msgstr ""

#: ../../source/zlib/index.rst:71
msgid "``zlib`` supports several different compression levels, allowing a balance between computational cost and the amount of space reduction. The default compression level, ``zlib.Z_DEFAULT_COMPRESSION`` is ``-1`` and corresponds to a hard-coded value that compromises between performance and compression outcome. This currently corresponds to level ``6``."
msgstr ""

#: ../../source/zlib/index.rst:0
msgid "zlib_compresslevel.py"
msgstr ""

#: ../../source/zlib/index.rst:82
msgid "A level of 0 means no compression at all. A level of 9 requires the most computation and produces the smallest output. As this example shows, the same size reduction may be achieved with multiple compression levels for a given input."
msgstr ""

#: ../../source/zlib/index.rst:112
msgid "Incremental Compression and Decompression"
msgstr ""

#: ../../source/zlib/index.rst:114
msgid "The in-memory approach has drawbacks that make it impractical for real-world use cases, primarily that the system needs enough memory to hold both the uncompressed and compressed versions resident in memory at the same time.  The alternative is to use ``Compress`` and ``Decompress`` objects to manipulate data incrementally, so that the entire data set does not have to fit into memory."
msgstr ""

#: ../../source/zlib/index.rst:0
msgid "zlib_incremental.py"
msgstr ""

#: ../../source/zlib/index.rst:125
msgid "This example reads small blocks of data from a plain text file and passes it to ``compress()``.  The compressor maintains an internal buffer of compressed data.  Since the compression algorithm depends on checksums and minimum block sizes, the compressor may not be ready to return data each time it receives more input.  If it does not have an entire compressed block ready, it returns an empty byte string.  When all of the data is fed in, the ``flush()`` method forces the compressor to close the final block and return the rest of the compressed data."
msgstr ""

#: ../../source/zlib/index.rst:160
msgid "Mixed Content Streams"
msgstr ""

#: ../../source/zlib/index.rst:162
msgid "The ``Decompress`` class returned by ``decompressobj()`` can also be used in situations where compressed and uncompressed data is mixed together."
msgstr ""

#: ../../source/zlib/index.rst:0
msgid "zlib_mixed.py"
msgstr ""

#: ../../source/zlib/index.rst:170
msgid "After decompressing all of the data, the ``unused_data`` attribute contains any data not used."
msgstr ""

#: ../../source/zlib/index.rst:187
msgid "Checksums"
msgstr ""

#: ../../source/zlib/index.rst:189
msgid "In addition to compression and decompression functions, ``zlib`` includes two functions for computing checksums of data, ``adler32()`` and ``crc32()``.  Neither checksum is cryptographically secure, and they are only intended for use for data integrity verification."
msgstr ""

#: ../../source/zlib/index.rst:0
msgid "zlib_checksums.py"
msgstr ""

#: ../../source/zlib/index.rst:199
msgid "Both functions take the same arguments, a byte string containing the data and an optional value to be used as a starting point for the checksum.  They return a 32-bit signed integer value which can also be passed back on subsequent calls as a new starting point argument to produce a *running* checksum."
msgstr ""

#: ../../source/zlib/index.rst:221
msgid "Compressing Network Data"
msgstr ""

#: ../../source/zlib/index.rst:223
msgid "The server in the next listing uses the stream compressor to respond to requests consisting of filenames by writing a compressed version of the file to the socket used to communicate with the client."
msgstr ""

#: ../../source/zlib/index.rst:0
msgid "zlib_server.py"
msgstr ""

#: ../../source/zlib/index.rst:231
msgid "It has some artificial chunking in place to illustrate the buffering behavior that happens when the data passed to ``compress()`` or ``decompress()`` does not result in a complete block of compressed or uncompressed output."
msgstr ""

#: ../../source/zlib/index.rst:236
msgid "The client connects to the socket and requests a file.  Then it loops, receiving blocks of compressed data.  Since a block may not contain enough information to decompress it entirely, the remainder of any data received earlier is combined with the new data and passed to the decompressor.  As the data is decompressed, it is appended to a buffer, which is compared against the file contents at the end of the processing loop."
msgstr ""

#: ../../source/zlib/index.rst:246
msgid "This server has obvious security implications.  Do not run it on a system on the open Internet or in any environment where security might be an issue."
msgstr ""

#: ../../source/zlib/index.rst:319
msgid ":pydoc:`zlib`"
msgstr ""

#: ../../source/zlib/index.rst:321
msgid ":mod:`gzip` -- The ``gzip`` module includes a higher level (file-based) interface to the zlib library."
msgstr ""

#: ../../source/zlib/index.rst:324
msgid "http://www.zlib.net/ -- Home page for zlib library."
msgstr ""

#: ../../source/zlib/index.rst:326
msgid "http://www.zlib.net/manual.html -- Complete zlib documentation."
msgstr ""

#: ../../source/zlib/index.rst:328
msgid ":mod:`bz2` -- The ``bz2`` module provides a similar interface to the bzip2 compression library."
msgstr ""

