# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Doug Hellmann
# This file is distributed under the same license as the PyMOTW-3 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMOTW-3 \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-15 15:56-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/collections/chainmap.rst:3
msgid "ChainMap --- Search Multiple Dictionaries"
msgstr ""

#: ../../source/collections/chainmap.rst:5
msgid "The ``ChainMap`` class manages a sequence of dictionaries, and searches through them in the order they are given to find values associated with keys. A ``ChainMap`` makes a good \"context\" container, since it can be treated as a stack for which changes happen as the stack grows, with these changes being discarded again as the stack shrinks."
msgstr ""

#: ../../source/collections/chainmap.rst:12
msgid "Accessing Values"
msgstr ""

#: ../../source/collections/chainmap.rst:14
msgid "The ``ChainMap`` supports the same API as a regular dictionary for accessing existing values."
msgstr ""

#: ../../source/collections/chainmap.rst:0
msgid "collections_chainmap_read.py"
msgstr ""

#: ../../source/collections/chainmap.rst:21
msgid "The child mappings are searched in the order they are passed to the constructor, so the value reported for the key ``'c'`` comes from the ``a`` dictionary."
msgstr ""

#: ../../source/collections/chainmap.rst:51
msgid "Reordering"
msgstr ""

#: ../../source/collections/chainmap.rst:53
msgid "The ``ChainMap`` stores the list of mappings over which it searches in a list in its :attr:`maps` attribute. This list is mutable, so it is possible to add new mappings directly or to change the order of the elements to control lookup and update behavior."
msgstr ""

#: ../../source/collections/chainmap.rst:0
msgid "collections_chainmap_reorder.py"
msgstr ""

#: ../../source/collections/chainmap.rst:62
msgid "When the list of mappings is reversed, the value associated with ``'c'`` changes."
msgstr ""

#: ../../source/collections/chainmap.rst:82
msgid "Updating Values"
msgstr ""

#: ../../source/collections/chainmap.rst:84
msgid "A ``ChainMap`` does not cache the values in the child mappings. Thus, if their contents are modified, the results are reflected when the ``ChainMap`` is accessed."
msgstr ""

#: ../../source/collections/chainmap.rst:0
msgid "collections_chainmap_update_behind.py"
msgstr ""

#: ../../source/collections/chainmap.rst:92
msgid "Changing the values associated with existing keys and adding new elements works the same way."
msgstr ""

#: ../../source/collections/chainmap.rst:108
msgid "It is also possible to set values through the ``ChainMap`` directly, although only the first mapping in the chain is actually modified."
msgstr ""

#: ../../source/collections/chainmap.rst:0
msgid "collections_chainmap_update_directly.py"
msgstr ""

#: ../../source/collections/chainmap.rst:116
msgid "When the new value is stored using ``m``, the ``a`` mapping is updated."
msgstr ""

#: ../../source/collections/chainmap.rst:133
msgid "``ChainMap`` provides a convenience method for creating a new instance with one extra mapping at the front of the :attr:`maps` list to make it easy to avoid modifying the existing underlying data structures."
msgstr ""

#: ../../source/collections/chainmap.rst:0
msgid "collections_chainmap_new_child.py"
msgstr ""

#: ../../source/collections/chainmap.rst:142
msgid "This stacking behavior is what makes it convenient to use ``ChainMap`` instances as template or application contexts. Specifically, it is easy to add or update values in one iteration, then discard the changes for the next iteration."
msgstr ""

#: ../../source/collections/chainmap.rst:164
msgid "For situations where the new context is known or built in advance, it is also possible to pass a mapping to ``new_child()``."
msgstr ""

#: ../../source/collections/chainmap.rst:0
msgid "collections_chainmap_new_child_explicit.py"
msgstr ""

#: ../../source/collections/chainmap.rst:171
msgid "This is the equivalent of"
msgstr ""

#: ../../source/collections/chainmap.rst:177
msgid "and produces"
msgstr ""

