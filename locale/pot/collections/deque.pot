# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Doug Hellmann
# This file is distributed under the same license as the PyMOTW-3 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMOTW-3 \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-15 15:56-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/collections/deque.rst:5
msgid "deque --- Double-Ended Queue"
msgstr ""

#: ../../source/collections/deque.rst:7
msgid "A double-ended queue, or ``deque``, supports adding and removing elements from either end of the queue. The more commonly used stacks and queues are degenerate forms of deques, where the inputs and outputs are restricted to a single end."
msgstr ""

#: ../../source/collections/deque.rst:0
msgid "collections_deque.py"
msgstr ""

#: ../../source/collections/deque.rst:16
msgid "Since deques are a type of sequence container, they support some of the same operations as ``list``, such as examining the contents with ``__getitem__()``, determining length, and removing elements from the middle of the queue by matching identity."
msgstr ""

#: ../../source/collections/deque.rst:38
msgid "Populating"
msgstr ""

#: ../../source/collections/deque.rst:40
msgid "A deque can be populated from either end, termed \"left\" and \"right\" in the Python implementation."
msgstr ""

#: ../../source/collections/deque.rst:0
msgid "collections_deque_populating.py"
msgstr ""

#: ../../source/collections/deque.rst:47
msgid "The ``extendleft()`` function iterates over its input and performs the equivalent of an ``appendleft()`` for each item. The end result is that the ``deque`` contains the input sequence in reverse order."
msgstr ""

#: ../../source/collections/deque.rst:67
msgid "Consuming"
msgstr ""

#: ../../source/collections/deque.rst:69
msgid "Similarly, the elements of the ``deque`` can be consumed from both ends or either end, depending on the algorithm being applied."
msgstr ""

#: ../../source/collections/deque.rst:0
msgid "collections_deque_consuming.py"
msgstr ""

#: ../../source/collections/deque.rst:76
msgid "Use ``pop()`` to remove an item from the \"right\" end of the ``deque`` and ``popleft()`` to take an item from the \"left\" end."
msgstr ""

#: ../../source/collections/deque.rst:95
msgid "Since deques are thread-safe, the contents can even be consumed from both ends at the same time from separate threads."
msgstr ""

#: ../../source/collections/deque.rst:0
msgid "collections_deque_both_ends.py"
msgstr ""

#: ../../source/collections/deque.rst:102
msgid "The threads in this example alternate between each end, removing items until the ``deque`` is empty."
msgstr ""

#: ../../source/collections/deque.rst:121
msgid "Rotating"
msgstr ""

#: ../../source/collections/deque.rst:123
msgid "Another useful aspect of the ``deque`` is the ability to rotate it in either direction, so as to skip over some items."
msgstr ""

#: ../../source/collections/deque.rst:0
msgid "collections_deque_rotate.py"
msgstr ""

#: ../../source/collections/deque.rst:130
msgid "Rotating the ``deque`` to the right (using a positive rotation) takes items from the right end and moves them to the left end. Rotating to the left (with a negative value) takes items from the left end and moves them to the right end.  It may help to visualize the items in the deque as being engraved along the edge of a dial."
msgstr ""

#: ../../source/collections/deque.rst:151
msgid "Constraining the Queue Size"
msgstr ""

#: ../../source/collections/deque.rst:153
msgid "A ``deque`` instance can be configured with a maximum length so that it never grows beyond that size. When the queue reaches the specified length, existing items are discarded as new items are added. This behavior is useful for finding the last *n* items in a stream of undetermined length."
msgstr ""

#: ../../source/collections/deque.rst:0
msgid "collections_deque_maxlen.py"
msgstr ""

#: ../../source/collections/deque.rst:163
msgid "The deque length is maintained regardless of which end the items are added to."
msgstr ""

#: ../../source/collections/deque.rst:196
msgid "`Wikipedia: Deque <https://en.wikipedia.org/wiki/Deque>`_ -- A discussion of the deque data structure."
msgstr ""

#: ../../source/collections/deque.rst:199
msgid "`Deque Recipes <https://docs.python.org/3.5/library/collections.html#deque-recipes>`_ -- Examples of using deques in algorithms from the standard library documentation."
msgstr ""

