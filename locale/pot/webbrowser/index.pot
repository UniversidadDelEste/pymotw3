# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Doug Hellmann
# This file is distributed under the same license as the PyMOTW-3 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMOTW-3 \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-15 15:56-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/webbrowser/index.rst:3
msgid "webbrowser --- Displays web pages"
msgstr ""

#: ../../source/webbrowser/index.rst:8
msgid "Use the `webbrowser` module to display web pages to your users."
msgstr ""

#: ../../source/webbrowser/index.rst:10
msgid "The ``webbrowser`` module includes functions to open URLs in interactive browser applications. The module includes a registry of available browsers, in case multiple options are available on the system. It can also be controlled with the ``BROWSER`` environment variable."
msgstr ""

#: ../../source/webbrowser/index.rst:16
msgid "Simple Example"
msgstr ""

#: ../../source/webbrowser/index.rst:18
msgid "To open a page in the browser, use the ``open()`` function."
msgstr ""

#: ../../source/webbrowser/index.rst:0
msgid "webbrowser_open.py"
msgstr ""

#: ../../source/webbrowser/index.rst:24
msgid "The URL is opened in a browser window, and that window is raised to the top of the window stack. The documentation says that an existing window will be reused, if possible, but the actual behavior may depend on your browser's settings. Using Firefox on Mac OS X, a new window was always created."
msgstr ""

#: ../../source/webbrowser/index.rst:31
msgid "Windows vs. Tabs"
msgstr ""

#: ../../source/webbrowser/index.rst:33
msgid "If you always want a new window used, use ``open_new()``."
msgstr ""

#: ../../source/webbrowser/index.rst:0
msgid "webbrowser_open_new.py"
msgstr ""

#: ../../source/webbrowser/index.rst:39
msgid "If you would rather create a new tab, use ``open_new_tab()`` instead."
msgstr ""

#: ../../source/webbrowser/index.rst:42
msgid "Using a specific browser"
msgstr ""

#: ../../source/webbrowser/index.rst:44
msgid "If for some reason your application needs to use a specific browser, you can access the set of registered browser controllers using the ``get()`` function. The browser controller has methods to ``open()``, ``open_new()``, and ``open_new_tab()``. This example forces the use of the lynx browser:"
msgstr ""

#: ../../source/webbrowser/index.rst:0
msgid "webbrowser_get.py"
msgstr ""

#: ../../source/webbrowser/index.rst:54
msgid "Refer to the module documentation for a list of available browser types."
msgstr ""

#: ../../source/webbrowser/index.rst:58
msgid "``BROWSER`` variable"
msgstr ""

#: ../../source/webbrowser/index.rst:60
msgid "Users can control the module from outside your application by setting the environment variable ``BROWSER`` to the browser names or commands to try. The value should consist of a series of browser names separated by ``os.pathsep``. If the name includes ``%s``, the name is interpreted as a literal command and executed directly with the ``%s`` replaced by the URL. Otherwise, the name is passed to ``get()`` to obtain a controller object from the registry."
msgstr ""

#: ../../source/webbrowser/index.rst:68
msgid "For example, this command opens the web page in lynx, assuming it is available, no matter what other browsers are registered."
msgstr ""

#: ../../source/webbrowser/index.rst:75
msgid "If none of the names in ``BROWSER`` work, ``webbrowser`` falls back to its default behavior."
msgstr ""

#: ../../source/webbrowser/index.rst:80
msgid "Command Line Interface"
msgstr ""

#: ../../source/webbrowser/index.rst:82
msgid "All of the features of the ``webbrowser`` module are available via the command line as well as from within your Python program."
msgstr ""

#: ../../source/webbrowser/index.rst:102
msgid ":pydoc:`webbrowser`"
msgstr ""

#: ../../source/webbrowser/index.rst:104
msgid "`What the What? <https://github.com/dhellmann/whatthewhat>`_ -- Runs your Python program and then launches a Google search for any exception message produced."
msgstr ""

