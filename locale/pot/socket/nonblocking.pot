# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Doug Hellmann
# This file is distributed under the same license as the PyMOTW-3 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMOTW-3 \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-15 15:56-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/socket/nonblocking.rst:3
msgid "Non-blocking Communication and Timeouts"
msgstr ""

#: ../../source/socket/nonblocking.rst:5
msgid "By default, a ``socket`` is configured so that sending or receiving data *blocks*, stopping program execution until the socket is ready.  Calls to ``send()`` wait for buffer space to be available for the outgoing data, and calls to ``recv()`` wait for the other program to send data that can be read.  This form of I/O operation is easy to understand, but can lead to inefficient operation and even deadlocks, if both programs end up waiting for the other to send or receive data."
msgstr ""

#: ../../source/socket/nonblocking.rst:14
msgid "There are a few ways to work around this situation.  One is to use a separate thread for communicating with each socket.  This can introduce other complexities, though, with communication between the threads.  Another option is to change the socket to not block at all, and return immediately if it is not ready to handle the operation. Use the ``setblocking()`` method to change the blocking flag for a socket.  The default value is ``1``, which means to block.  Passing a value of ``0`` turns off blocking.  If the socket is has blocking turned off and it is not ready for the operation, then ``socket.error`` is raised."
msgstr ""

#: ../../source/socket/nonblocking.rst:25
msgid "A compromise solution is to set a timeout value for socket operations. Use ``settimeout()`` to change the timeout of a ``socket`` to a floating point value representing the number of seconds to block before deciding the socket is not ready for the operation.  When the timeout expires, a ``timeout`` exception is raised."
msgstr ""

