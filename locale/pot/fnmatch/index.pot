# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Doug Hellmann
# This file is distributed under the same license as the PyMOTW-3 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMOTW-3 \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-15 15:56-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/fnmatch/index.rst:3
msgid "fnmatch --- Unix-style Glob Pattern Matching"
msgstr ""

#: ../../source/fnmatch/index.rst:8
msgid "Handle Unix-style filename comparisons."
msgstr ""

#: ../../source/fnmatch/index.rst:10
msgid "The ``fnmatch`` module is used to compare filenames against glob-style patterns such as used by Unix shells."
msgstr ""

#: ../../source/fnmatch/index.rst:14
msgid "Simple Matching"
msgstr ""

#: ../../source/fnmatch/index.rst:16
msgid "``fnmatch()`` compares a single filename against a pattern and returns a boolean, indicating whether or not they match. The comparison is case-sensitive when the operating system uses a case-sensitive file system."
msgstr ""

#: ../../source/fnmatch/index.rst:0
msgid "fnmatch_fnmatch.py"
msgstr ""

#: ../../source/fnmatch/index.rst:25
msgid "In this example, the pattern matches all files starting with ``'fnmatch_'`` and ending in ``'.py'``."
msgstr ""

#: ../../source/fnmatch/index.rst:46
msgid "To force a case-sensitive comparison, regardless of the file system and operating system settings, use ``fnmatchcase()``."
msgstr ""

#: ../../source/fnmatch/index.rst:0
msgid "fnmatch_fnmatchcase.py"
msgstr ""

#: ../../source/fnmatch/index.rst:53
msgid "Since the OS X system used to test this program uses a case-sensitive file system, no files match the modified pattern."
msgstr ""

#: ../../source/fnmatch/index.rst:75
msgid "Filtering"
msgstr ""

#: ../../source/fnmatch/index.rst:77
msgid "To test a sequence of filenames, use ``filter()``, which returns a list of the names that match the pattern argument."
msgstr ""

#: ../../source/fnmatch/index.rst:0
msgid "fnmatch_filter.py"
msgstr ""

#: ../../source/fnmatch/index.rst:84
msgid "In this example, ``filter()`` returns the list of names of the example source files associated with this section."
msgstr ""

#: ../../source/fnmatch/index.rst:113
msgid "Translating Patterns"
msgstr ""

#: ../../source/fnmatch/index.rst:115
msgid "Internally, ``fnmatch`` converts the glob pattern to a regular expression and uses the :mod:`re` module to compare the name and pattern. The ``translate()`` function is the public API for converting glob patterns to regular expressions."
msgstr ""

#: ../../source/fnmatch/index.rst:0
msgid "fnmatch_translate.py"
msgstr ""

#: ../../source/fnmatch/index.rst:124
msgid "Some of the characters are escaped to make a valid expression."
msgstr ""

#: ../../source/fnmatch/index.rst:141
msgid ":pydoc:`fnmatch`"
msgstr ""

#: ../../source/fnmatch/index.rst:143
msgid ":mod:`glob` -- The glob module combines ``fnmatch`` matching with ``os.listdir()`` to produce lists of files and directories matching patterns."
msgstr ""

#: ../../source/fnmatch/index.rst:147
msgid ":mod:`re` -- Regular expression pattern matching."
msgstr ""

