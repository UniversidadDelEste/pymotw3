# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Doug Hellmann
# This file is distributed under the same license as the PyMOTW-3 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMOTW-3 \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-15 15:56-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/zipfile/index.rst:3
msgid "zipfile --- ZIP Archive Access"
msgstr ""

#: ../../source/zipfile/index.rst:8
msgid "Read and write ZIP archive files."
msgstr ""

#: ../../source/zipfile/index.rst:10
msgid "The ``zipfile`` module can be used to manipulate ZIP archive files, the format popularized by the PC program PKZIP."
msgstr ""

#: ../../source/zipfile/index.rst:14
msgid "Testing ZIP Files"
msgstr ""

#: ../../source/zipfile/index.rst:16
msgid "The ``is_zipfile()`` function returns a boolean indicating whether or not the filename passed as an argument refers to a valid ZIP archive."
msgstr ""

#: ../../source/zipfile/index.rst:0
msgid "zipfile_is_zipfile.py"
msgstr ""

#: ../../source/zipfile/index.rst:24
msgid "If the file does not exist at all, ``is_zipfile()`` returns ``False``."
msgstr ""

#: ../../source/zipfile/index.rst:43
msgid "Reading Metadata from an Archive"
msgstr ""

#: ../../source/zipfile/index.rst:45
msgid "Use the ``ZipFile`` class to work directly with a ZIP archive. It supports methods for reading data about existing archives as well as modifying the archives by adding additional files."
msgstr ""

#: ../../source/zipfile/index.rst:0
msgid "zipfile_namelist.py"
msgstr ""

#: ../../source/zipfile/index.rst:53
msgid "The ``namelist()`` method returns the names of the files in an existing archive."
msgstr ""

#: ../../source/zipfile/index.rst:68
msgid "The list of names is only part of the information available from the archive, though. To access all of the metadata about the ZIP contents, use the ``infolist()`` or ``getinfo()`` methods."
msgstr ""

#: ../../source/zipfile/index.rst:0
msgid "zipfile_infolist.py"
msgstr ""

#: ../../source/zipfile/index.rst:76
msgid "There are additional fields other than those printed here, but deciphering the values into anything useful requires careful reading of the *PKZIP Application Note* with the ZIP file specification."
msgstr ""

#: ../../source/zipfile/index.rst:99
msgid "If the name of the archive member is known in advance, its ``ZipInfo`` object can be retrieved directly with ``getinfo()``."
msgstr ""

#: ../../source/zipfile/index.rst:0
msgid "zipfile_getinfo.py"
msgstr ""

#: ../../source/zipfile/index.rst:107
msgid "If the archive member is not present, ``getinfo()`` raises a ``KeyError``."
msgstr ""

#: ../../source/zipfile/index.rst:124
msgid "Extracting Archived Files From an Archive"
msgstr ""

#: ../../source/zipfile/index.rst:126
msgid "To access the data from an archive member, use the ``read()`` method, passing the member's name."
msgstr ""

#: ../../source/zipfile/index.rst:0
msgid "zipfile_read.py"
msgstr ""

#: ../../source/zipfile/index.rst:133
msgid "The data is automatically decompressed, if necessary."
msgstr ""

#: ../../source/zipfile/index.rst:153
msgid "Creating New Archives"
msgstr ""

#: ../../source/zipfile/index.rst:155
msgid "To create a new archive, instantiate the ``ZipFile`` with a mode of ``'w'``.  Any existing file is truncated and a new archive is started. To add files, use the ``write()`` method."
msgstr ""

#: ../../source/zipfile/index.rst:0
msgid "zipfile_write.py"
msgstr ""

#: ../../source/zipfile/index.rst:163
msgid "By default, the contents of the archive are not compressed."
msgstr ""

#: ../../source/zipfile/index.rst:189
msgid "To add compression, the :mod:`zlib` module is required. If :mod:`zlib` is available, the compression mode for individual files or for the archive as a whole can be set using ``zipfile.ZIP_DEFLATED``. The default compression mode is ``zipfile.ZIP_STORED``, which adds the input data to the archive without compressing it."
msgstr ""

#: ../../source/zipfile/index.rst:0
msgid "zipfile_write_compression.py"
msgstr ""

#: ../../source/zipfile/index.rst:199
msgid "This time, the archive member is compressed."
msgstr ""

#: ../../source/zipfile/index.rst:226
msgid "Using Alternate Archive Member Names"
msgstr ""

#: ../../source/zipfile/index.rst:228
msgid "Pass an ``arcname`` value to ``write()`` to add a file to an archive using a name other than the original filename."
msgstr ""

#: ../../source/zipfile/index.rst:0
msgid "zipfile_write_arcname.py"
msgstr ""

#: ../../source/zipfile/index.rst:235
msgid "There is no sign of the original filename in the archive."
msgstr ""

#: ../../source/zipfile/index.rst:259
msgid "Writing Data from Sources Other Than Files"
msgstr ""

#: ../../source/zipfile/index.rst:261
msgid "Sometimes it is necessary to write to a ZIP archive using data that did not come from an existing file. Rather than writing the data to a file, then adding that file to the ZIP archive, use the ``writestr()`` method to add a string of bytes to the archive directly."
msgstr ""

#: ../../source/zipfile/index.rst:0
msgid "zipfile_writestr.py"
msgstr ""

#: ../../source/zipfile/index.rst:272
msgid "In this case, the ``compress_type`` argument to ``ZipFile`` was used to compress the data, since ``writestr()`` does not take an argument to specify the compression."
msgstr ""

#: ../../source/zipfile/index.rst:298
msgid "Writing with a ZipInfo Instance"
msgstr ""

#: ../../source/zipfile/index.rst:300
msgid "Normally, the modification date is computed when a file or string is added to the archive.  A ``ZipInfo`` instance can be passed to ``writestr()`` to define the modification date and other metadata."
msgstr ""

#: ../../source/zipfile/index.rst:0
msgid "zipfile_writestr_zipinfo.py"
msgstr ""

#: ../../source/zipfile/index.rst:308
msgid "In this example, the modified time is set to the current time, the data is compressed, and false value for ``create_system`` is used.  A simple comment is also associated with the new file."
msgstr ""

#: ../../source/zipfile/index.rst:333
msgid "Appending to Files"
msgstr ""

#: ../../source/zipfile/index.rst:335
msgid "In addition to creating new archives, it is possible to append to an existing archive or add an archive at the end of an existing file (such as a ``.exe`` file for a self-extracting archive). To open a file to append to it, use mode ``'a'``."
msgstr ""

#: ../../source/zipfile/index.rst:0
msgid "zipfile_append.py"
msgstr ""

#: ../../source/zipfile/index.rst:344
msgid "The resulting archive contains two members:"
msgstr ""

#: ../../source/zipfile/index.rst:387
msgid "Python ZIP Archives"
msgstr ""

#: ../../source/zipfile/index.rst:389
msgid "Python can import modules from inside ZIP archives using :mod:`zipimport`, if those archives appear in ``sys.path``. The ``PyZipFile`` class can be used to construct a module suitable for use in this way. The extra method ``writepy()`` tells ``PyZipFile`` to scan a directory for ``.py`` files and add the corresponding ``.pyo`` or ``.pyc`` file to the archive. If neither compiled form exists, a ``.pyc`` file is created and added."
msgstr ""

#: ../../source/zipfile/index.rst:0
msgid "zipfile_pyzipfile.py"
msgstr ""

#: ../../source/zipfile/index.rst:401
msgid "With the debug attribute of the ``PyZipFile`` set to ``3``, verbose debugging is enabled and output is produced as it compiles each ``.py`` file it finds."
msgstr ""

#: ../../source/zipfile/index.rst:463
msgid "Limitations"
msgstr ""

#: ../../source/zipfile/index.rst:465
msgid "The ``zipfile`` module does not support ZIP files with appended comments, or multi-disk archives. It does support ZIP files larger than 4 GB that use the ZIP64 extensions."
msgstr ""

#: ../../source/zipfile/index.rst:471
msgid ":pydoc:`zipfile`"
msgstr ""

#: ../../source/zipfile/index.rst:473
msgid ":mod:`zlib` -- ZIP compression library"
msgstr ""

#: ../../source/zipfile/index.rst:475
msgid ":mod:`tarfile` -- Read and write tar archives"
msgstr ""

#: ../../source/zipfile/index.rst:477
msgid ":mod:`zipimport` -- Import Python modules from ZIP archive."
msgstr ""

#: ../../source/zipfile/index.rst:479
msgid "`PKZIP Application Note`_ -- Official specification for the ZIP archive format."
msgstr ""

