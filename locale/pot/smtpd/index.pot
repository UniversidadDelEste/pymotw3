# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Doug Hellmann
# This file is distributed under the same license as the PyMOTW-3 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMOTW-3 \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-15 15:56-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/smtpd/index.rst:3
msgid "smtpd --- Sample Mail Servers"
msgstr ""

#: ../../source/smtpd/index.rst:8
msgid "Includes classes for implementing SMTP servers."
msgstr ""

#: ../../source/smtpd/index.rst:10
msgid "The ``smtpd`` module includes classes for building simple mail transport protocol servers.  It is the server-side of the protocol used by :mod:`smtplib`."
msgstr ""

#: ../../source/smtpd/index.rst:15
msgid "Mail Server Base Class"
msgstr ""

#: ../../source/smtpd/index.rst:17
msgid "The base class for all of the provided example servers is ``SMTPServer``.  It handles communicating with the client, receiving incoming data, and provides a convenient hook to override to process the message once it is fully available."
msgstr ""

#: ../../source/smtpd/index.rst:22
msgid "The constructor arguments are the local address to listen for connections and the remote address where proxied messages should be delivered.  The method ``process_message()`` is provided as a hook to be overridden by a derived class.  It is called when the message is completely received, and given these arguments:"
msgstr ""

#: ../../source/smtpd/index.rst:28
msgid "``peer``"
msgstr ""

#: ../../source/smtpd/index.rst:30
msgid "The client's address, a tuple containing IP and incoming port."
msgstr ""

#: ../../source/smtpd/index.rst:32
msgid "``mailfrom``"
msgstr ""

#: ../../source/smtpd/index.rst:34
msgid "The \"from\" information out of the message envelope, given to the server by the client when the message is delivered.  This does not necessarily match the ``From`` header in all cases."
msgstr ""

#: ../../source/smtpd/index.rst:38
msgid "``rcpttos``"
msgstr ""

#: ../../source/smtpd/index.rst:40
msgid "The list of recipients from the message envelope.  Again, this does not always match the ``To`` header, especially if a recipient is being blind carbon copied."
msgstr ""

#: ../../source/smtpd/index.rst:44
msgid "``data``"
msgstr ""

#: ../../source/smtpd/index.rst:46
msgid "The full RFC 5322 message body."
msgstr ""

#: ../../source/smtpd/index.rst:48
msgid "The default implementation of ``process_message()`` raises ``NotImplementedError``.  The next example defines a subclass that overrides the method to print information about the messages it receives."
msgstr ""

#: ../../source/smtpd/index.rst:0
msgid "smtpd_custom.py"
msgstr ""

#: ../../source/smtpd/index.rst:57
msgid "``SMTPServer`` uses :mod:`asyncore`, so to run the server call ``asyncore.loop()``."
msgstr ""

#: ../../source/smtpd/index.rst:60
msgid "A client is needed to demonstrate the server.  One of the examples from the section on :mod:`smtplib` can be adapted to create a client to send data to the test server running locally on port 1025."
msgstr ""

#: ../../source/smtpd/index.rst:0
msgid "smtpd_senddata.py"
msgstr ""

#: ../../source/smtpd/index.rst:68
msgid "To test the programs, run ``smtpd_custom.py`` in one terminal and ``smtpd_senddata.py`` in another."
msgstr ""

#: ../../source/smtpd/index.rst:82
msgid "The debug output from ``smtpd_senddata.py`` shows all of the communication with the server."
msgstr ""

#: ../../source/smtpd/index.rst:123
msgid "To stop the server, press ``Ctrl-C``."
msgstr ""

#: ../../source/smtpd/index.rst:127
msgid "Debugging Server"
msgstr ""

#: ../../source/smtpd/index.rst:129
msgid "The previous example shows the arguments to ``process_message()``, but ``smtpd`` also includes a server specifically designed for more complete debugging, called ``DebuggingServer``.  It prints the entire incoming message to the console and then stops processing (it does not proxy the message to a real mail server)."
msgstr ""

#: ../../source/smtpd/index.rst:0
msgid "smtpd_debug.py"
msgstr ""

#: ../../source/smtpd/index.rst:139
msgid "Using the ``smtpd_senddata.py`` client program from earlier, the output of the ``DebuggingServer`` is:"
msgstr ""

#: ../../source/smtpd/index.rst:159
msgid "Proxy Server"
msgstr ""

#: ../../source/smtpd/index.rst:161
msgid "The ``PureProxy`` class implements a straightforward proxy server.  Incoming messages are forwarded upstream to the server given as argument to the constructor."
msgstr ""

#: ../../source/smtpd/index.rst:167
msgid "The standard library documentation for ``smtpd`` says, \"running this has a good chance to make you into an open relay, so please be careful.\""
msgstr ""

#: ../../source/smtpd/index.rst:171
msgid "The steps for setting up the proxy server are similar to the debug server."
msgstr ""

#: ../../source/smtpd/index.rst:0
msgid "smtpd_proxy.py"
msgstr ""

#: ../../source/smtpd/index.rst:178
msgid "It prints no output, though, so to verify that it is working look at the mail server logs."
msgstr ""

#: ../../source/smtpd/index.rst:193
msgid ":pydoc:`smtpd`"
msgstr ""

#: ../../source/smtpd/index.rst:195
msgid ":mod:`smtplib` -- Provides a client interface."
msgstr ""

#: ../../source/smtpd/index.rst:197
msgid ":mod:`email` -- Parses email messages."
msgstr ""

#: ../../source/smtpd/index.rst:199
msgid ":mod:`asyncore` -- Base module for writing asynchronous servers."
msgstr ""

#: ../../source/smtpd/index.rst:201
msgid ":rfc:`2822` -- *Internet Message Format*, defines the email message format."
msgstr ""

#: ../../source/smtpd/index.rst:204
msgid ":rfc:`5322` -- Replacement for RFC 2822."
msgstr ""

