# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Doug Hellmann
# This file is distributed under the same license as the PyMOTW-3 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMOTW-3 \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-15 15:56-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/fractions/index.rst:3
msgid "fractions --- Rational Numbers"
msgstr ""

#: ../../source/fractions/index.rst:8
msgid "Implements a class for working with rational numbers."
msgstr ""

#: ../../source/fractions/index.rst:10
msgid "The ``Fraction`` class implements numerical operations for rational numbers based on the API defined by ``Rational`` in the :mod:`numbers` module."
msgstr ""

#: ../../source/fractions/index.rst:15
msgid "Creating Fraction Instances"
msgstr ""

#: ../../source/fractions/index.rst:17
msgid "As with the :mod:`decimal` module, new values can be created in several ways.  One easy way is to create them from separate numerator and denominator values:"
msgstr ""

#: ../../source/fractions/index.rst:0
msgid "fractions_create_integers.py"
msgstr ""

#: ../../source/fractions/index.rst:25
msgid "The lowest common denominator is maintained as new values are computed."
msgstr ""

#: ../../source/fractions/index.rst:42
msgid "Another way to create a ``Fraction`` is using a string representation of ``<numerator> / <denominator>``:"
msgstr ""

#: ../../source/fractions/index.rst:0
msgid "fractions_create_strings.py"
msgstr ""

#: ../../source/fractions/index.rst:49
msgid "The string is parsed to find the numerator and denominator values."
msgstr ""

#: ../../source/fractions/index.rst:65
msgid "Strings can also use the more usual decimal or floating point notation of series of digits separated by a period. Any string that can be parsed by ``float()`` and that does not represent \"not a number\" (``NaN``) or an infinite value is supported."
msgstr ""

#: ../../source/fractions/index.rst:0
msgid "fractions_create_strings_floats.py"
msgstr ""

#: ../../source/fractions/index.rst:74
msgid "The numerator and denominator values represented by the floating point value is computed automatically."
msgstr ""

#: ../../source/fractions/index.rst:92
msgid "It is also possible to create ``Fraction`` instances directly from other representations of rational values, such as ``float`` or ``Decimal``."
msgstr ""

#: ../../source/fractions/index.rst:0
msgid "fractions_from_float.py"
msgstr ""

#: ../../source/fractions/index.rst:100
msgid "Floating point values that cannot be expressed exactly may yield unexpected results."
msgstr ""

#: ../../source/fractions/index.rst:118
msgid "Using ``Decimal`` representations of the values gives the expected results."
msgstr ""

#: ../../source/fractions/index.rst:0
msgid "fractions_from_decimal.py"
msgstr ""

#: ../../source/fractions/index.rst:125
msgid "The internal implementation of ``Decimal`` does not suffer from the precision errors of the standard floating point representation."
msgstr ""

#: ../../source/fractions/index.rst:146
msgid "Arithmetic"
msgstr ""

#: ../../source/fractions/index.rst:148
msgid "Once the fractions are instantiated, they can be used in mathematical expressions."
msgstr ""

#: ../../source/fractions/index.rst:0
msgid "fractions_arithmetic.py"
msgstr ""

#: ../../source/fractions/index.rst:155
msgid "All of the standard operators are supported."
msgstr ""

#: ../../source/fractions/index.rst:173
msgid "Approximating Values"
msgstr ""

#: ../../source/fractions/index.rst:175
msgid "A useful feature of ``Fraction`` is the ability to convert a floating point number to an approximate rational value."
msgstr ""

#: ../../source/fractions/index.rst:0
msgid "fractions_limit_denominator.py"
msgstr ""

#: ../../source/fractions/index.rst:182
msgid "The value of the fraction can be controlled by limiting the size of the denominator."
msgstr ""

#: ../../source/fractions/index.rst:208
msgid ":pydoc:`fractions`"
msgstr ""

#: ../../source/fractions/index.rst:210
msgid ":mod:`decimal` -- The ``decimal`` module provides an API for fixed and floating point math."
msgstr ""

#: ../../source/fractions/index.rst:213
msgid ":mod:`numbers` -- Numeric abstract base classes."
msgstr ""

#: ../../source/fractions/index.rst:215
msgid ":ref:`Python 2 to 3 porting notes for fractions <porting-fractions>`"
msgstr ""

