#
msgid ""
msgstr ""
"Project-Id-Version: Python Module of the Week 2.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 13:35-0300\n"
"PO-Revision-Date: 2015-11-03 17:20-0300\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: es_AR\n"
"X-Generator: Poedit 1.8.6\n"

#: ../../PyMOTW/articles/text_processing.rst:5
msgid "Text Processing Tools"
msgstr "Herramientas de Procesamiento de Texto"

#: ../../PyMOTW/articles/text_processing.rst:7
msgid ""
"The string class is the most obvious text processing tool available to "
"Python programmers, but there are plenty of other tools in the standard "
"library to make text manipulation simpler."
msgstr ""
"La clase string es la herramienta de procesamiento de texto más obvia a "
"disposición de los programadores de Python, pero hay un montón de otras "
"herramientas en la biblioteca estándar para realizar la manipulación de "
"texto simple."

#: ../../PyMOTW/articles/text_processing.rst:10
msgid "string module"
msgstr "Modulo string"

#: ../../PyMOTW/articles/text_processing.rst:12
msgid ""
"Old-style code will use functions from the :mod:`string` module, instead of "
"methods of string objects.  There is an equivalent method for each function "
"from the module, and use of the functions is deprecated for new code."
msgstr ""
"Código de estilo antiguo utilizará funciones del modulo :mod:`string`, en "
"lugar de los métodos de objetos de cadena. Hay un método equivalente para "
"cada función del módulo, y el uso de las funciones es obsoleto para un "
"código nuevo."

#: ../../PyMOTW/articles/text_processing.rst:14
msgid ""
"Newer code may use a ``string.Template`` as a simple way to parameterize "
"strings beyond the features of the string or unicode classes.  While not as "
"feature-rich as templates defined by many of the web frameworks or "
"extension modules available on PyPI, ``string.Template`` is a good middle "
"ground for user-modifiable templates where dynamic values need to be "
"inserted into otherwise static text."
msgstr ""
"Código reciente puede usar el ``string.Template`` como una forma sencilla "
"de parametrizar cadenas más allá de las características de las clases de "
"cadena o Unicode. Aunque no es tan rica en características como plantillas "
"definidas por muchos de los frameworks web o módulos de extensión "
"disponibles en PyPI, ``string.Template`` es un buen término medio para "
"plantillas modificables por el usuario donde los valores dinámicos "
"necesitan ser insertado en el texto de otra forma estática."

#: ../../PyMOTW/articles/text_processing.rst:17
msgid "Text Input"
msgstr "Entrada de texto"

#: ../../PyMOTW/articles/text_processing.rst:19
msgid ""
"Reading from a file is easy enough, but if you're writing a line-by-line "
"filter the :mod:`fileinput` module is even easier.  The fileinput API calls "
"for you to iterate over the ``input()`` generator, processing each line as "
"it is yielded.  The generator handles parsing command line arguments for "
"file names, or falling back to reading directly from ``sys.stdin``.  The "
"result is a flexible tool your users can run directly on a file or as part "
"of a pipeline."
msgstr ""
"Lectura de un archivo es bastante fácil, pero si usted está escribiendo un "
"filtrado línea por línea del modulo :mod:`fileinput` es aún más fácil. La "
"API fileinput pide a iterar sobre el generador `` input ()`` , procesando "
"cada línea que ya produjo. El generador maneja analizar los argumentos de "
"línea de comandos para los nombres de archivo, o cayendo de nuevo a la "
"lectura directa de ``sys.stdin``. El resultado es una herramienta flexible "
"que los usuarios puedan ejecutar directamente en un archivo o como parte de "
"una tubería."

#: ../../PyMOTW/articles/text_processing.rst:22
msgid "Text Output"
msgstr "salida de texto"

#: ../../PyMOTW/articles/text_processing.rst:24
msgid ""
"The :mod:`textwrap` module includes tools for formatting text from "
"paragraphs by limiting the width of output, adding indentation, and "
"inserting line breaks to wrap lines consistently."
msgstr ""
"El modulo :mod:`textwrap` incluye herramientas para dar formato al texto de "
"los apartados al limitar el ancho de la producción, añadiendo sangría, e "
"insertar saltos de línea para envolver líneas consistentemente."

#: ../../PyMOTW/articles/text_processing.rst:27
msgid "Comparing Values"
msgstr "Comparando valores"

#: ../../PyMOTW/articles/text_processing.rst:29
msgid ""
"The standard library includes two modules related to comparing text values "
"beyond the built-in equality and sort comparison supported by string "
"objects.  :mod:`re` provides a complete regular expression library, "
"implemented largely in C for performance.  Regular expressions are well-"
"suited for finding substrings within a larger data set, comparing strings "
"against a pattern (rather than another fixed string), and mild parsing."
msgstr ""
"La biblioteca estándar incluye dos módulos relacionados con la comparación "
"de los valores de texto mas allá de la incorporada en la comparación de "
"igualdad y ordenamiento soportado por los objetos de cadena. :mod:`re` "
"ofrece una completa biblioteca de expresiones regulares, implementado "
"principalmente en C para el rendimiento. Las expresiones regulares son muy "
"adecuados para la búsqueda de subcadenas dentro de un conjunto de datos "
"mayor, comparar cadenas contra un patrón (en lugar de otra cadena fija), y "
"el análisis leve."

#: ../../PyMOTW/articles/text_processing.rst:31
msgid ""
":mod:`difflib`, on the other hand, shows you the actual differences between "
"sequences of text in terms of the parts added, removed, or changed.  The "
"output of the comparison functions in :mod:`difflib` can be used to provide "
"more detailed feedback to user about where changes occur in two inputs, how "
"a document has changed over time, etc."
msgstr ""
":mod:`difflib`, por otro lado, muestra las diferencias reales entre las "
"secuencias de texto en términos de las partes añadidas, eliminado o "
"cambiado. La salida de las funciones de comparación en :mod:`difflib` se "
"puede utilizar para proporcionar información más detallada al usuario "
"acerca de dónde se producen cambios en dos entradas, cómo un documento que "
"ha cambiado con el tiempo, etc."
