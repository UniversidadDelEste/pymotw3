#
msgid ""
msgstr ""
"Project-Id-Version: Python Module of the Week 2.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 13:35-0300\n"
"PO-Revision-Date: 2015-11-03 17:11-0300\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: es_AR\n"
"X-Generator: Poedit 1.8.6\n"

#: ../../PyMOTW/articles/file_access.rst:5
msgid "File Access"
msgstr "Acceso a archivo"

#: ../../PyMOTW/articles/file_access.rst:7
msgid ""
"Python's standard library includes a large range of tools for working with "
"files, filenames, and file contents."
msgstr ""
"La librería estándar de Python incluye un gran rango de herramientas para "
"trabajar con archivos, nombre de archivos y contenido de archivos."

#: ../../PyMOTW/articles/file_access.rst:10
msgid "Filenames"
msgstr "Nombre de archivos"

#: ../../PyMOTW/articles/file_access.rst:12
msgid ""
"The first step in working with files is to get the name of the file so you "
"can operate on it.  Python represents filenames as simple strings, but "
"provides tools for building them from standard, platform-independent, "
"components in :mod:`os.path`.  List the contents of a directory with "
"``listdir()`` from :mod:`os`, or use :mod:`glob` to build a list of "
"filenames from a pattern.  Finer grained filtering of filenames is possible "
"with :mod:`fnmatch`."
msgstr ""
"El primer paso para trabajar con los archivos es conseguir que el nombre "
"del archivo para que pueda operar en él. Python representa los nombres de "
"archivo como cadenas simples, pero proporciona herramientas para "
"construirlos desde estándar, independientes de la plataforma, los "
"componentes de :mod:`os.path`. Enumerar los contenidos de un directorio con "
"``listdir()`` de :mod: `os` o uso :mod:`glob` para construir una lista de "
"nombres de archivo de un patrón. Filtrado de grano fino de nombres de "
"archivo es posible con :mod: `fnmatch`."

#: ../../PyMOTW/articles/file_access.rst:15
msgid "Meta-data"
msgstr "Metadatos"

#: ../../PyMOTW/articles/file_access.rst:17
msgid ""
"Once you know the name of the file, you may want to check other "
"characteristics such as permissions or the file size using ``os.stat()`` "
"and the constants in :mod:`stat`."
msgstr ""
"Una vez conocido el nombre del archivo, es posible que desee comprobar "
"otras características tales como permisos o el tamaño del archivo usando "
"``os.stat()`` y las constantes en :mod:`stat`."

#: ../../PyMOTW/articles/file_access.rst:20
msgid "Reading Files"
msgstr "Leer archivos"

#: ../../PyMOTW/articles/file_access.rst:22
msgid ""
"If you're writing a filter application that processes text input line-by-"
"line, :mod:`fileinput` provides an easy framework to get started.  The "
"fileinput API calls for you to iterate over the ``input()`` generator, "
"processing each line as it is yielded.  The generator handles parsing "
"command line arguments for file names, or falling back to reading directly "
"from ``sys.stdin``.  The result is a flexible tool your users can run "
"directly on a file or as part of a pipeline."
msgstr ""
"Si estás escribiendo una aplicación de filtro que procesa línea por línea "
"de entrada de texto, :mod: `fileinput` proporciona un marco fácil para "
"empezar. La API fileinput pide a iterar sobre el generador ``input ()`` , "
"el procesamiento de cada línea, ya que se produjo. El generador maneja "
"analizar los argumentos de línea de comandos para los nombres de archivo, o "
"cayendo de nuevo a la lectura directa de ``sys.stdin``. El resultado es una "
"herramienta flexible que los usuarios puedan ejecutar directamente en un "
"archivo o como parte de una tubería."

#: ../../PyMOTW/articles/file_access.rst:24
msgid ""
"If your app needs random access to files, :mod:`linecache` makes it easy to "
"read lines by their line number.  The contents of the file are maintained "
"in a cache, so be careful of memory consumption."
msgstr ""
"Si su aplicación necesita acceso aleatorio a archivos, :mod:`linecache` "
"hace que sea fácil de leer las líneas por su número de línea. El contenido "
"del archivo se mantienen en una memoria caché, así que ten cuidado con el "
"consumo de memoria."

#: ../../PyMOTW/articles/file_access.rst:27
msgid "Temporary Files"
msgstr "Archivos temporarios"

#: ../../PyMOTW/articles/file_access.rst:29
msgid ""
"For cases where you need to create scratch files to hold data temporarily, "
"or before moving it to a permanent location, :mod:`tempfile` will be very "
"useful.  It provides classes to create temporary files and directories "
"safely and securely.  Names are guaranteed not to collide, and include "
"random components so they are not easily guessable."
msgstr ""
"Para los casos en que es necesario crear archivos de memoria virtual para "
"mantener datos en forma temporal, o antes de moverlo a una ubicación "
"permanente, :mod:`tempfile` será muy útil. Proporciona clases para crear "
"archivos temporales y directorios de forma segura. Nombres están "
"garantizados de no colisionar, e incluyen componentes aleatorios por lo que "
"no son fáciles de adivinar."

#: ../../PyMOTW/articles/file_access.rst:32
msgid "Files and Directories"
msgstr "Archivos y directorios"

#: ../../PyMOTW/articles/file_access.rst:34
msgid ""
"Frequently you need to work on a file as a whole, without worrying about "
"what is in it.  The :mod:`shutil` module includes high-level file "
"operations such as copying files and directories, setting permissions, etc."
msgstr ""
"Con frecuencia es necesario trabajar en un archivo como un todo, sin "
"preocuparse de lo que hay en el. El modulo :mod:`shutil` incluye las "
"operaciones de archivos de alto nivel, tales como la copia de archivos y "
"directorios, establecer permisos, etc."
