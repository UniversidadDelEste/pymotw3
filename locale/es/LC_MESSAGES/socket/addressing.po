# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Doug Hellmann
# This file is distributed under the same license as the PyMOTW-3 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: PyMOTW-3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-24 18:41-0300\n"
"PO-Revision-Date: 2017-05-07 13:31-0500\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"
"Last-Translator: Francisco Silva G. <francisco.silva.garces@gmail.com>\n"
"Language-Team: \n"
"Language: es\n"
"X-Generator: Poedit 2.0.1\n"

#: ../../source/socket/addressing.rst:3
msgid "Addressing, Protocol Families and Socket Types"
msgstr "Direccionamiento, Familias de Protocolo y Tipos de Socket"

#: ../../source/socket/addressing.rst:5
msgid ""
"A *socket* is one endpoint of a communication channel used by programs to "
"pass data back and forth locally or across the Internet.  Sockets have two "
"primary properties controlling the way they send data: the *address "
"family* controls the OSI network layer protocol used and the *socket type* "
"controls the transport layer protocol."
msgstr ""
"Un *socket* es un punto final de un canal de comunicación utilizado por "
"los programas para pasar datos de ida y vuelta localmente o a través de "
"Internet. Los sockets tienen dos propiedades primarias que controlan la "
"forma en que envían datos: los controles de *familia de direcciones* del "
"protocolo utilizado de la capa de red OSI y los controles del *tipo de "
"socket* del protocolo de la capa de transporte."

#: ../../source/socket/addressing.rst:11
msgid ""
"Python supports three address families.  The most common, ``AF_INET``, is "
"used for IPv4 Internet addressing.  IPv4 addresses are four bytes long and "
"are usually represented as a sequence of four numbers, one per octet, "
"separated by dots (e.g., ``10.1.1.5`` and ``127.0.0.1``).  These values "
"are more commonly referred to as \"IP addresses.\"  Almost all Internet "
"networking is done using IP version 4 at this time."
msgstr ""
"Python admite tres familias de direcciones. El más común, ``AF_INET``, es "
"utilizado para el direccionamiento de Internet IPv4. Las direcciones IPv4 "
"tienen una longitud de cuatro bytes y normalmente se representan como una "
"secuencia de cuatro números, uno por octeto, separados por puntos (por "
"ejemplo, ``10.1.1.5`` y ``127.0.0.1``). Estos valores se denominan "
"comúnmente \"direcciones IP\". Casi todas las redes de Internet se hace "
"utilizando la versión 4 de IP en este momento."

#: ../../source/socket/addressing.rst:19
msgid ""
"``AF_INET6`` is used for IPv6 Internet addressing.  IPv6 is the \"next "
"generation\" version of the Internet protocol, and supports 128-bit "
"addresses, traffic shaping, and routing features not available under "
"IPv4.  Adoption of IPv6 continues to grow, especially with the "
"proliferation of cloud computing and the extra devices being added to the "
"network because of Internet-of-things projects."
msgstr ""
"``AF_INET6`` se utiliza para el direccionamiento de Internet IPv6. IPv6 es "
"la versión de \"próxima generación\" del protocolo de Internet, y admite "
"direcciones de 128 bits, configuración de tráfico y funciones de "
"enrutamiento no disponibles bajo IPv4. La adopción de IPv6 continúa "
"creciendo, especialmente con la proliferación de la computación en nube y "
"los demás dispositivos que se agregan a la red debido a los proyectos de "
"Internet de las cosas (IoT)."

#: ../../source/socket/addressing.rst:26
msgid ""
"``AF_UNIX`` is the address family for Unix Domain Sockets (UDS), an inter-"
"process communication protocol available on POSIX-compliant systems.  The "
"implementation of UDS typically allows the operating system to pass data "
"directly from process to process, without going through the network "
"stack.  This is more efficient than using ``AF_INET``, but because the "
"file system is used as the namespace for addressing, UDS is restricted to "
"processes on the same system. The appeal of using UDS over other IPC "
"mechanisms such as named pipes or shared memory is that the programming "
"interface is the same as for IP networking, so the application can take "
"advantage of efficient communication when running on a single host, but "
"use the same code when sending data across the network."
msgstr ""
"``AF_UNIX`` es la familia de direcciones de Unix Domain Sockets (UDS), un "
"protocolo de comunicación entre procesos disponible en sistemas "
"compatibles con POSIX. La implementación de UDS típicamente permite que el "
"sistema operativo pase datos directamente de proceso a proceso, sin pasar "
"por la pila de red. Esto es más eficiente que usar AF_INET, pero como el "
"sistema de archivos es utilizado como espacio de nombres para el "
"direccionamiento, UDS está restringido a los procesos del mismo sistema. "
"La apelación de usar UDS sobre otros mecanismos IPC tales como pipes con "
"nombre o memoria compartida es que la interfaz de programación es la misma "
"que para la red IP, por lo que la aplicación puede aprovechar la "
"comunicación eficiente cuando se ejecuta en un único host, pero utiliza el "
"mismo código al enviar datos a través de la red."

#: ../../source/socket/addressing.rst:41
msgid ""
"The ``AF_UNIX`` constant is only defined on systems where UDS is supported."
msgstr ""
"La constante ``AF_UNIX`` sólo se define en los sistemas en los que UDS es "
"compatible."

#: ../../source/socket/addressing.rst:44
msgid ""
"The socket type is usually either ``SOCK_DGRAM`` for message-oriented "
"datagram transport or ``SOCK_STREAM`` for stream-oriented transport. "
"Datagram sockets are most often associated with UDP, the *user datagram "
"protocol*. They provide unreliable delivery of individual messages. Stream-"
"oriented sockets are associated with TCP, *transmission control protocol*. "
"They provide byte streams between the client and server, ensuring message "
"delivery or failure notification through timeout management, "
"retransmission, and other features."
msgstr ""
"El tipo de socket suele ser ``SOCK_DGRAM`` para el transporte de "
"datagramas orientado a mensajes o ``SOCK_STREAM`` para el transporte "
"orientado a flujos. Los sockets de datagramas se asocian más a menudo con "
"UDP, el *protocolo de datagramas de usuario (User Datagram Protocol)*. "
"Proporcionan una entrega poco fiable de mensajes individuales. Los sockets "
"orientados a flujos están asociados con TCP, *protocolo de control de "
"transmisión (Transmission Control Protocol)*. Proporcionan flujos de bytes "
"entre el cliente y el servidor, lo que garantiza la entrega de mensajes o "
"notificación de fallos a través de la gestión de tiempo de espera, la "
"retransmisión y otras características."

#: ../../source/socket/addressing.rst:53
msgid ""
"Most application protocols that deliver a large amount of data, such as "
"HTTP, are built on top of TCP because it makes it simpler to create "
"complex applications when message ordering and delivery is handled "
"automatically. UDP is commonly used for protocols where order is less "
"important (since the messages are self-contained and often small, such as "
"name look-ups via DNS), or for *multicasting* (sending the same data to "
"several hosts). Both UDP and TCP can be used with either IPv4 or IPv6 "
"addressing."
msgstr ""
"La mayoría de los protocolos de aplicación que proporcionan una gran "
"cantidad de datos, como HTTP, se construyen sobre TCP, ya que simplifica "
"la creación de aplicaciones complejas cuando el pedido y la entrega de "
"mensajes se gestionan automáticamente. UDP se utiliza comúnmente para "
"protocolos donde el orden es menos importante (ya que los mensajes son "
"autónomos y a menudo pequeños, como las búsquedas de nombres a través de "
"DNS) o para *multicasting* (enviar los mismos datos a varios hosts). Tanto "
"UDP como TCP pueden utilizarse con direcciones IPv4 o IPv6."

#: ../../source/socket/addressing.rst:64
msgid ""
"Python's ``socket`` module supports other socket types but they are less "
"commonly used, so are not covered here.  Refer to the standard library "
"documentation for more details."
msgstr ""
"El módulo ``socket`` de Python soporta otros tipos de socket, pero son "
"menos utilizados, por lo que no están cubiertos aquí. Consulte la "
"documentación de la liberaría estándar para obtener más detalles."

#: ../../source/socket/addressing.rst:69
msgid "Looking up Hosts on the Network"
msgstr "Búsqueda de Hosts en la Red"

#: ../../source/socket/addressing.rst:71
msgid ""
"``socket`` includes functions to interface with the domain name services "
"on the network so a program can convert the host name of a server into its "
"numerical network address.  Applications do not need to convert addresses "
"explicitly before using them to connect to a server, but it can be useful "
"when reporting errors to include the numerical address as well as the name "
"value being used."
msgstr ""
"``socket`` incluye funciones para interactuar con los servicios de nombres "
"de dominio en la red para que un programa pueda convertir el nombre de "
"host de un servidor en su dirección numérica de red. Las aplicaciones no "
"necesitan convertir las direcciones de forma explícita antes de "
"utilizarlas para conectarse a un servidor, pero pueden ser útiles cuando "
"se indican errores para incluir la dirección numérica así como el nombre "
"que se está utilizando."

#: ../../source/socket/addressing.rst:78
msgid "To find the official name of the current host, use ``gethostname()``."
msgstr ""
"Para encontrar el nombre oficial del host actual, use ``gethostname ()``."

#: ../../source/socket/addressing.rst
msgid "socket_gethostname.py"
msgstr "socket_gethostname.py"

#: ../../source/socket/addressing.rst:85
msgid ""
"The name returned will depend on the network settings for the current "
"system, and may change if it is on a different network (such as a laptop "
"attached to a wireless LAN)."
msgstr ""
"El nombre devuelto dependerá de la configuración de red del sistema actual "
"y puede cambiar si está en una red diferente (tal como un portátil "
"conectado a una LAN inalámbrica)."

#: ../../source/socket/addressing.rst:97
msgid ""
"Use ``gethostbyname()`` to consult the operating system hostname "
"resolution API and convert the name of a server to its numerical address."
msgstr ""
"Utilice ``gethostbyname()`` para consultar la API de resolución del nombre "
"de host del sistema operativo y convertir el nombre de un servidor en su "
"dirección numérica."

#: ../../source/socket/addressing.rst
msgid "socket_gethostbyname.py"
msgstr "socket_gethostbyname.py"

#: ../../source/socket/addressing.rst:105
msgid ""
"If the DNS configuration of the current system includes one or more "
"domains in the search, the name argument does not need to be a fully "
"qualified name (i.e., it does not need to include the domain name as well "
"as the base hostname).  If the name cannot be found, an exception of type "
"``socket.error`` is raised."
msgstr ""
"Si la configuración DNS del sistema actual incluye uno o más dominios en "
"la búsqueda, el argumento de nombre no necesita ser un nombre completo (es "
"decir, no necesita incluir el nombre de dominio ni el nombre de host "
"base). Si no se puede encontrar el nombre, se genera una excepción del "
"tipo ``socket.error``."

#: ../../source/socket/addressing.rst:127
msgid ""
"For access to more naming information about a server, use "
"``gethostbyname_ex()``.  It returns the canonical hostname of the server, "
"any aliases, and all of the available IP addresses that can be used to "
"reach it."
msgstr ""
"Para tener acceso a más información de nombres sobre un servidor, use "
"``gethostbyname_ex ()``. Devuelve el nombre de host canónico del servidor, "
"cualquier alias y todas las direcciones IP disponibles que se pueden "
"utilizar para llegar a él."

#: ../../source/socket/addressing.rst
msgid "socket_gethostbyname_ex.py"
msgstr "socket_gethostbyname_ex.py"

#: ../../source/socket/addressing.rst:136
msgid ""
"Having all known IP addresses for a server lets a client implement its own "
"load balancing or fail-over algorithms."
msgstr ""
"Tener todas las direcciones IP conocidas para un servidor permite a un "
"cliente implementar sus propios algoritmos de balanceo de carga o fail-"
"over."

#: ../../source/socket/addressing.rst:168
msgid ""
"Use ``getfqdn()`` to convert a partial name to a fully qualified domain "
"name."
msgstr ""
"Utilice ``getfqdn()`` para convertir un nombre parcial en un nombre de "
"dominio completo."

#: ../../source/socket/addressing.rst
msgid "socket_getfqdn.py"
msgstr "socket_getfqdn.py"

#: ../../source/socket/addressing.rst:175
msgid ""
"The name returned will not necessarily match the input argument in any way "
"if the input is an alias, such as ``www`` is here."
msgstr ""
"El nombre devuelto no coincidirá necesariamente con el argumento de "
"entrada de ninguna manera si la entrada es un alias, tal como ``www`` es "
"aquí."

#: ../../source/socket/addressing.rst:191
msgid ""
"When the address of a server is available, use ``gethostbyaddr()`` to do a "
"\"reverse\" lookup for the name."
msgstr ""
"Cuando la dirección de un servidor está disponible, use ``gethostbyaddr "
"()`` para realizar una búsqueda \"inversa\" del nombre."

#: ../../source/socket/addressing.rst
msgid "socket_gethostbyaddr.py"
msgstr "socket_gethostbyaddr.py"

#: ../../source/socket/addressing.rst:198
msgid ""
"The return value is a tuple containing the full hostname, any aliases, and "
"all IP addresses associated with the name."
msgstr ""
"El valor de retorno es una tupla que contiene el nombre de host completo, "
"cualquier alias y todas las direcciones IP asociadas con el nombre."

#: ../../source/socket/addressing.rst:216
msgid "Finding Service Information"
msgstr "Encontrar información de Servicios"

#: ../../source/socket/addressing.rst:218
msgid ""
"In addition to an IP address, each socket address includes an integer "
"*port number*.  Many applications can run on the same host, listening on a "
"single IP address, but only one socket at a time can use a port at that "
"address.  The combination of IP address, protocol, and port number "
"uniquely identify a communication channel and ensure that messages sent "
"through a socket arrive at the correct destination."
msgstr ""
"Además de una dirección IP, cada dirección de socket incluye un número de "
"puerto *entero*. Muchas aplicaciones pueden ejecutarse en el mismo host, "
"escuchando en una sola dirección IP, pero sólo un socket a la vez puede "
"utilizar un puerto en esa dirección. La combinación de dirección IP, "
"protocolo y número de puerto identifica de forma única un canal de "
"comunicación y asegura que los mensajes enviados a través de un socket "
"lleguen al destino correcto."

#: ../../source/socket/addressing.rst:225
msgid ""
"Some of the port numbers are pre-allocated for a specific protocol. For "
"example, communication between email servers using SMTP occurs over port "
"number 25 using TCP, and web clients and servers use port 80 for HTTP.  "
"The port numbers for network services with standardized names can be "
"looked up with ``getservbyname()``."
msgstr ""
"Algunos de los números de puerto están preasignados para un protocolo "
"específico. Por ejemplo, la comunicación entre los servidores de correo "
"electrónico que utilizan SMTP se produce a través del puerto número 25 "
"mediante TCP, y los clientes y servidores web utilizan el puerto 80 para "
"HTTP. Los números de puerto para servicios de red con nombres "
"estandarizados se pueden buscar con ``getservbyname ()``."

#: ../../source/socket/addressing.rst
msgid "socket_getservbyname.py"
msgstr "socket_getservbyname.py"

#: ../../source/socket/addressing.rst:235
msgid ""
"Although a standardized service is unlikely to change ports, looking up "
"the value with a system call instead of hard-coding it is more flexible "
"when new services are added in the future."
msgstr ""
"Aunque es poco probable que un servicio estandarizado cambie los puertos, "
"buscar el valor con una llamada de sistema en lugar de codificarlo "
"explícitamente es más flexible cuando se agregan nuevos servicios en el "
"futuro."

#: ../../source/socket/addressing.rst:259
msgid "To reverse the service port lookup, use ``getservbyport()``."
msgstr ""
"Para invertir la búsqueda de puerto de servicio, use ``getservbyport ()``."

#: ../../source/socket/addressing.rst
msgid "socket_getservbyport.py"
msgstr "socket_getservbyport.py"

#: ../../source/socket/addressing.rst:265
msgid ""
"The reverse lookup is useful for constructing URLs to services from "
"arbitrary addresses."
msgstr ""
"La búsqueda inversa es útil para construir direcciones URL a servicios "
"desde direcciones arbitrarias."

#: ../../source/socket/addressing.rst:288
msgid ""
"The number assigned to a transport protocol can be retrieved with "
"``getprotobyname()``."
msgstr ""
"El número asignado a un protocolo de transporte puede ser recuperado con "
"``getprotobyname ()``."

#: ../../source/socket/addressing.rst
msgid "socket_getprotobyname.py"
msgstr "socket_getprotobyname.py"

#: ../../source/socket/addressing.rst:295
msgid ""
"The values for protocol numbers are standardized, and defined as constants "
"in ``socket`` with the prefix ``IPPROTO_``."
msgstr ""
"Los valores de los números de protocolo se estandarizan y se definen como "
"constantes en ``socket`` con el prefijo ``IPPROTO_``."

#: ../../source/socket/addressing.rst:314
msgid "Looking Up Server Addresses"
msgstr "Buscando Direcciones de Servidor"

#: ../../source/socket/addressing.rst:316
msgid ""
"``getaddrinfo()`` converts the basic address of a service into a list of "
"tuples with all of the information necessary to make a connection.  The "
"contents of each tuple will vary, containing different network families or "
"protocols."
msgstr ""
"``getaddrinfo()`` convierte la dirección básica de un servicio en una "
"lista de tuplas con toda la información necesaria para realizar una "
"conexión. El contenido de cada tupla variará, conteniendo diferentes "
"familias o protocolos de red."

#: ../../source/socket/addressing.rst
msgid "socket_getaddrinfo.py"
msgstr "socket_getaddrinfo.py"

#: ../../source/socket/addressing.rst:325
msgid ""
"This program demonstrates how to look up the connection information for "
"``www.python.org``."
msgstr ""
"Este programa muestra cómo buscar la información de conexión de ``www."
"python.org``."

#: ../../source/socket/addressing.rst:363
msgid ""
"``getaddrinfo()`` takes several arguments for filtering the result list. "
"The ``host`` and ``port`` values given in the example are required "
"arguments.  The optional arguments are ``family``, ``socktype``, "
"``proto``, and ``flags``.  The optional values should be either ``0`` or "
"one of the constants defined by ``socket``."
msgstr ""
"``getaddrinfo()`` toma varios argumentos para filtrar la lista de "
"resultados. Los valores ``host`` y ``port`` dados en el ejemplo son "
"argumentos obligatorios. Los argumentos opcionales son ``family``, "
"``socktype``, ``proto`` y ``flags``. Los valores opcionales deben ser "
"``0`` o una de las constantes definidas por ``socket``."

#: ../../source/socket/addressing.rst
msgid "socket_getaddrinfo_extra_args.py"
msgstr "socket_getaddrinfo_extra_args.py"

#: ../../source/socket/addressing.rst:373
msgid ""
"Since ``flags`` includes ``AI_CANONNAME``, the canonical name of the "
"server, which may be different from the value used for the lookup if the "
"host has any aliases, is included in the results this time. Without the "
"flag, the canonical name value is left empty."
msgstr ""
"Dado que ``flags`` incluye ``AI_CANONNAME``, el nombre canónico del "
"servidor, que puede ser diferente del valor utilizado para la búsqueda si "
"el host tiene algún alias, se incluye en los resultados esta vez. Sin el "
"flag, el valor de nombre canónico se deja vacío."

#: ../../source/socket/addressing.rst:397
msgid "IP Address Representations"
msgstr "Representaciones de Direcciones IP"

#: ../../source/socket/addressing.rst:399
msgid ""
"Network programs written in C use the data type ``struct sockaddr`` to "
"represent IP addresses as binary values (instead of the string addresses "
"usually found in Python programs).  To convert IPv4 addresses between the "
"Python representation and the C representation, use ``inet_aton()`` and "
"``inet_ntoa()``."
msgstr ""
"Los programas de red escritos en C usan el tipo de datos ``struct "
"sockaddr`` para representar las direcciones IP como valores binarios (en "
"lugar de las direcciones de cadenas usualmente encontradas en los "
"programas Python). Para convertir direcciones IPv4 entre la representación "
"Python y la representación C, use ``inet_aton ()`` e ``inet_ntoa ()``."

#: ../../source/socket/addressing.rst
msgid "socket_address_packing.py"
msgstr "socket_address_packing.py"

#: ../../source/socket/addressing.rst:409
msgid ""
"The four bytes in the packed format can be passed to C libraries, "
"transmitted safely over the network, or saved to a database compactly."
msgstr ""
"Los cuatro bytes en el formato empaquetado se pueden pasar a las "
"bibliotecas C, transmitida de forma segura a través de la red o guardarda "
"en una base de datos de forma compacta."

#: ../../source/socket/addressing.rst:431
msgid ""
"The related functions ``inet_pton()`` and ``inet_ntop()`` work with both "
"IPv4 and IPv6 addresses, producing the appropriate format based on the "
"address family parameter passed in."
msgstr ""
"Las funciones relacionadas ``inet_pton ()`` e ``inet_ntop ()`` funcionan "
"con direcciones IPv4 e IPv6, produciendo el formato apropiado basado en el "
"parámetro pasado que indica la familia de direcciones."

#: ../../source/socket/addressing.rst
msgid "socket_ipv6_address_packing.py"
msgstr "socket_ipv6_address_packing.py"

#: ../../source/socket/addressing.rst:439
msgid ""
"An IPv6 address is already a hexadecimal value, so converting the packed "
"version to a series of hex digits produces a string similar to the "
"original value."
msgstr ""
"Una dirección IPv6 ya es un valor hexadecimal, por lo que convertir la "
"versión empaquetada a una serie de dígitos hexadecimales produce una "
"cadena similar al valor original."

#: ../../source/socket/addressing.rst:459
msgid ""
"`Wikipedia: IPv6 <https://en.wikipedia.org/wiki/IPv6>`__ -- Article "
"discussing Internet Protocol Version 6 (IPv6)."
msgstr ""
"`Wikipedia: IPv6 <https://en.wikipedia.org/wiki/IPv6>` __ -- Artículo "
"sobre el Protocolo de Internet Versión 6 (IPv6)."

#: ../../source/socket/addressing.rst:462
msgid ""
"`Wikipedia: OSI Networking Model <https://en.wikipedia.org/wiki/"
"OSI_model>`__ -- Article describing the seven layer model of networking "
"implementation."
msgstr ""
"`Wikipedia: Modelo de Red OSI <https://en.wikipedia.org/wiki/OSI_model>` "
"__ -- Artículo que describe el modelo de siete capas de implementación de "
"redes."

#: ../../source/socket/addressing.rst:466
msgid ""
"`Assigned Internet Protocol Numbers <http://www.iana.org/assignments/"
"protocol-numbers/protocol-numbers.xml>`__ -- List of standard protocol "
"names and numbers."
msgstr ""
"`Números de Protocolo de Internet Asignados <http://www.iana.org/"
"assignments/protocol-numbers/protocol-numbers.xml>` __ -- Lista de nombres "
"y números de protocolo estándar."
