# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Doug Hellmann
# This file is distributed under the same license as the PyMOTW-3 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: PyMOTW-3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-15 15:56-0300\n"
"PO-Revision-Date: 2017-05-07 20:10-0500\n"
"Last-Translator: Francisco Silva G. <francisco.silva.garces@gmail.com>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"
"Language: es\n"
"X-Generator: Poedit 2.0.1\n"

#: ../../source/os/index.rst:3
msgid "os --- Portable access to operating system specific features"
msgstr ""
"os --- Acceso portable a características específicas del sistema operativo"

#: ../../source/os/index.rst:8
msgid "Portable access to operating system specific features."
msgstr "Acceso portable para característica específicas del sistema operativo."

#: ../../source/os/index.rst:10
msgid ""
"The ``os`` module provides a wrapper for platform specific modules such as :mod:"
"`posix`, :mod:`nt`, and :mod:`mac`. The API for functions available on all "
"platforms should be the same, so using the ``os`` module offers some measure of "
"portability. Not all functions are available on every platform, however. Many "
"of the process management functions described in this summary are not available "
"for Windows."
msgstr ""
"El módulo ``os`` proporciona un envoltorio para módulos específicos de la "
"plataforma, tales como :mod:`posix`, :mod:`nt` y :mod:`mac`. La API para "
"funciones disponibles en todas las plataformas debe ser la misma, por lo que el "
"uso del módulo ``os`` ofrece cierta medida de portabilidad. Sin embargo, no "
"todas las funciones están disponibles en todas las plataformas. Muchas de las "
"funciones de administración de procesos descritas en este resumen no están "
"disponibles para Windows."

#: ../../source/os/index.rst:17
msgid ""
"The Python documentation for the ``os`` module is subtitled \"Miscellaneous "
"operating system interfaces\". The module consists mostly of functions for "
"creating and managing running processes or file system content (files and "
"directories), with a few other bits of functionality thrown in besides."
msgstr ""
"La documentación de Python para el módulo ``os`` está subtitulada \"Interfaces "
"de sistemas operativos varios\". El módulo se compone principalmente de "
"funciones para crear y gestionar procesos en ejecución o el contenido del "
"sistema de archivos (archivos y directorios), con algunos otros bits de "
"funcionalidad."

#: ../../source/os/index.rst:24
msgid "Examining the File System Contents"
msgstr "Examinando el Contenido del Sistema de Archivos"

#: ../../source/os/index.rst:26
msgid ""
"To prepare a list of the contents of a directory on the file system, use "
"``listdir()``."
msgstr ""
"Para preparar una lista del contenido de un directorio en el sistema de "
"archivos, use ``listdir()``."

#: ../../source/os/index.rst
msgid "os_listdir.py"
msgstr "os_listdir.py"

#: ../../source/os/index.rst:33
msgid ""
"The return value is a list of all of the named members of the directory given. "
"No distinction is made between files, subdirectories, or symlinks."
msgstr ""
"El valor devuelto es una lista de todos los miembros con nombre del directorio "
"dado. No se hace distinción entre archivos, subdirectorios o enlaces simbólicos."

#: ../../source/os/index.rst:60
msgid ""
"The function ``walk()`` traverses a directory recursively and for each "
"subdirectory generates a ``tuple`` containing the directory path, any immediate "
"sub-directories of that path, and a list of the names of any files in that "
"directory."
msgstr ""
"La función ``walk()`` atraviesa un directorio recursivamente y para cada "
"subdirectorio genera una ``tupla`` que contiene la ruta del directorio, "
"cualquier subdirectorio inmediato de esa ruta, y una lista de los nombres de "
"cualquier archivo en ese directorio ."

#: ../../source/os/index.rst
msgid "os_walk.py"
msgstr "os_walk.py"

#: ../../source/os/index.rst:69
msgid "This example shows a recursive directory listing."
msgstr "Este ejemplo muestra una lista recursiva de directorios."

#: ../../source/os/index.rst:102
msgid ""
"If more information is needed than the names of the files, it is likely to be "
"more efficient to use ``scandir()`` than ``listdir()`` because more information "
"is collected in one system call when the directory is scanned."
msgstr ""
"Si se necesita más información que los nombres de los archivos, es probable que "
"sea más eficiente usar ``scandir()`` que `` listdir()`` porque se recopila más "
"información en una llamada al sistema cuando se escanea el directorio."

#: ../../source/os/index.rst
msgid "os_scandir.py"
msgstr "os_scandir.py"

#: ../../source/os/index.rst:111
msgid ""
"``scandir()`` returns a sequence of ``DirEntry`` instances for the items in the "
"directory. The object has several attributes and methods for accessing metadata "
"about the file."
msgstr ""
"``scandir()`` devuelve una secuencia de instancias ``DirEntry`` para los "
"elementos del directorio. El objeto tiene varios atributos y métodos para "
"acceder a metadatos sobre el archivo."

#: ../../source/os/index.rst:158
msgid "Managing File System Permissions"
msgstr "Administración de Permisos del Sistema de Archivos"

#: ../../source/os/index.rst:160
msgid ""
"Detailed information about a file can be accessed using ``stat()`` or "
"``lstat()`` (for checking the status of something that might be a symbolic "
"link)."
msgstr ""
"Se puede acceder a información detallada sobre un archivo usando ``stat()`` o "
"``lstat()`` (para comprobar el estado de algo que podría ser un enlace "
"simbólico)."

#: ../../source/os/index.rst
msgid "os_stat.py"
msgstr "os_stat.py"

#: ../../source/os/index.rst:168
msgid ""
"The output will vary depending on how the example code was installed. Try "
"passing different filenames on the command line to ``os_stat.py``."
msgstr ""
"La salida variará dependiendo de cómo se instaló el código de ejemplo. Trate de "
"pasar nombres de archivo diferentes en la línea de comandos a ``os_stat.py``."

#: ../../source/os/index.rst:204
msgid ""
"On Unix-like systems, file permissions can be changed using ``chmod()``, "
"passing the mode as an integer. Mode values can be constructed using constants "
"defined in the :mod:`stat` module.  This example toggles the user's execute "
"permission bit:"
msgstr ""
"En sistemas tipo Unix, los permisos de archivo se pueden cambiar usando "
"``chmod()``, pasando el modo como un entero. Los valores de modo se pueden "
"construir utilizando constantes definidas en el módulo :mod:`stat`. Este "
"ejemplo cambia el bit de permiso de ejecución del usuario:"

#: ../../source/os/index.rst
msgid "os_stat_chmod.py"
msgstr "os_stat_chmod.py"

#: ../../source/os/index.rst:213
msgid ""
"The script assumes it has the permissions necessary to modify the mode of the "
"file when run."
msgstr ""
"La secuencia de comandos asume que tiene los permisos necesarios para modificar "
"el modo del archivo cuando se ejecuta."

#: ../../source/os/index.rst:228
msgid ""
"The function ``access()`` can be used to test the access rights a process has "
"for a file."
msgstr ""
"La función ``access()`` se puede usar para probar los derechos de acceso que un "
"proceso tiene para un archivo."

#: ../../source/os/index.rst
msgid "os_access.py"
msgstr "os_access.py"

#: ../../source/os/index.rst:235
msgid ""
"The results will vary depending on how the example code is installed, but the "
"output will be similar to this:"
msgstr ""
"Los resultados variarán dependiendo de cómo se instale el código de ejemplo, "
"pero la salida será similar a esto:"

#: ../../source/os/index.rst:254
msgid ""
"The library documentation for ``access()`` includes two special warnings. "
"First, there is not much sense in calling ``access()`` to test whether a file "
"can be opened before actually calling ``open()`` on it. There is a small, but "
"real, window of time between the two calls during which the permissions on the "
"file could change. The other warning applies mostly to networked file systems "
"that extend the POSIX permission semantics. Some file system types may respond "
"to the POSIX call that a process has permission to access a file, then report a "
"failure when the attempt is made using ``open()`` for some reason not tested "
"via the POSIX call. All in all, it is better to call ``open()`` with the "
"required mode and catch the ``IOError`` raised if there is a problem."
msgstr ""
"La documentación de la biblioteca para ``access()`` incluye dos advertencias "
"especiales. En primer lugar, no hay mucho sentido en llamar ``access()`` para "
"probar si un archivo puede abrirse antes de llamar ``open()``. Hay una pequeña, "
"pero real, ventana de tiempo entre las dos llamadas durante las cuales los "
"permisos en el archivo podrían cambiar. La otra advertencia se aplica "
"principalmente a los sistemas de archivos en red que amplían la semántica de "
"permisos de POSIX. Algunos tipos de sistema de archivos pueden responder a la "
"llamada POSIX que un proceso tiene permiso para acceder a un archivo y, a "
"continuación, informar de un error cuando se realiza el intento usando "
"``open()`` por alguna razón no probada a través de la llamada POSIX. En "
"general, es mejor llamar ``open()`` con el modo requerido y capturar el "
"``IOError`` generado si hay un problema."

#: ../../source/os/index.rst:270
msgid "Creating and Deleting Directories"
msgstr "Creando y Eliminando Directorios"

#: ../../source/os/index.rst:272
msgid ""
"There are several functions for working with directories on the file system, "
"including creating, listing contents, and removing them."
msgstr ""
"Hay varias funciones para trabajar con directorios en el sistema de archivos, "
"incluyendo crear, listar contenidos y eliminarlos."

#: ../../source/os/index.rst
msgid "os_directories.py"
msgstr "os_directories.py"

#: ../../source/os/index.rst:279
msgid ""
"There are two sets of functions for creating and deleting directories. When "
"creating a new directory with ``mkdir()``, all of the parent directories must "
"already exist. When removing a directory with ``rmdir()``, only the leaf "
"directory (the last part of the path) is actually removed. In contrast, "
"``makedirs()`` and ``removedirs()`` operate on all of the nodes in the path. "
"``makedirs()`` will create any parts of the path that do not exist, and "
"``removedirs()`` will remove all of the parent directories, as long as they are "
"empty."
msgstr ""
"Hay dos conjuntos de funciones para crear y eliminar directorios. Al crear un "
"nuevo directorio con ``mkdir()``, todos los directorios primarios ya deben "
"existir. Cuando se elimina un directorio con ``rmdir()``, sólo se quita el "
"directorio hoja (la última parte de la ruta). En contraste, ``makedirs()`` y "
"``removedirs()`` operan en todos los nodos de la ruta. ``Makedirs()`` creará "
"las partes de la ruta que no existen, y ``removedirs()`` eliminará todos los "
"directorios primarios, siempre y cuando estén vacíos."

#: ../../source/os/index.rst:304
msgid "Working with Symbolic Links"
msgstr "Trabajando con Enlaces Simbólicos"

#: ../../source/os/index.rst:306
msgid ""
"For platforms and file systems that support them, there are functions for "
"working with symlinks."
msgstr ""
"Para plataformas y sistemas de archivos que los soportan, existen funciones "
"para trabajar con enlaces simbólicos."

#: ../../source/os/index.rst
msgid "os_symlinks.py"
msgstr "os_symlinks.py"

#: ../../source/os/index.rst:313
msgid ""
"Use ``symlink()`` to create a symbolic link and ``readlink()`` for reading it "
"to determine the original file pointed to by the link.  The ``lstat()`` "
"function is like ``stat()``, but operates on symbolic links."
msgstr ""
"Utilice ``symlink()`` para crear un enlace simbólico y ``readlink()`` para "
"leerlo y determinar el archivo original apuntado por el enlace. La función "
"``lstat()`` es como ``stat()``, pero opera con enlaces simbólicos."

#: ../../source/os/index.rst:333
msgid "Safely Replacing an Existing File"
msgstr "Reemplazando un archivo existente de manera segura"

# No estoy seguro de esta traducción
#: ../../source/os/index.rst:335
msgid ""
"Replacing or renaming an existing file is not idempotent and may expose "
"applications to race conditions. The ``rename()`` and ``replace()`` functions "
"implement safe algorithms for these actions, using atomic operations on POSIX-"
"compliant systems when possible."
msgstr ""
"Reemplazar o cambiar el nombre de un archivo existente no es idempotent y puede "
"exponer las aplicaciones a una condición de secuencia. Las funciones "
"``rename()`` y ``replace()`` implementan algoritmos seguros para estas "
"acciones, utilizando operaciones atómicas en sistemas compatibles con POSIX "
"cuando es posible."

#: ../../source/os/index.rst
msgid "os_rename_replace.py"
msgstr "os_rename_replace.py"

#: ../../source/os/index.rst:344
msgid ""
"The ``rename()`` and ``replace()`` functions work across filesystems, most of "
"the time. Renaming a file may fail if it is being moved to a new fileystem or "
"if the destination already exists."
msgstr ""
"Las funciones ``rename()`` y ``replace()`` funcionan a través de sistemas de "
"archivos, la mayoría del tiempo. Cambiar el nombre de un archivo puede fallar "
"si se está moviendo a un nuevo sistema de archivos o si el destino ya existe."

#: ../../source/os/index.rst:366
msgid "Detecting and Changing the Process Owner"
msgstr "Detectando y Cambiando el Propietario del Proceso"

#: ../../source/os/index.rst:368
msgid ""
"The next set of functions provided by ``os`` are used for determining and "
"changing the process owner ids. These are most frequently used by authors of "
"daemons or special system programs that need to change permission level rather "
"than running as ``root``. This section does not try to explain all of the "
"intricate details of Unix security, process owners, etc. See the references "
"list at the end of this section for more details."
msgstr ""
"El siguiente conjunto de funciones proporcionadas por ``os`` se utilizan para "
"determinar y cambiar los ids de propietario del proceso. Estos son los más "
"utilizados por los autores de daemons o programas especiales del sistema que "
"necesitan cambiar el nivel de permiso en lugar de ejecutar como ``root``. Esta "
"sección no trata de explicar todos los detalles complejos de la seguridad de "
"Unix, propietarios de procesos, etc. Consulte la lista de referencias al final "
"de esta sección para obtener más detalles."

#: ../../source/os/index.rst:376
msgid ""
"The following example shows the real and effective user and group information "
"for a process, and then changes the effective values. This is similar to what a "
"daemon would need to do when it starts as root during a system boot, to lower "
"the privilege level and run as a different user."
msgstr ""
"El ejemplo siguiente muestra la información real y efectiva de usuario y grupo "
"de un proceso y, a continuación, cambia los valores efectivos. Esto es similar "
"a lo que tendría que hacer un daemon cuando se inicia como root durante el "
"arranque del sistema, para bajar el nivel de privilegios y ejecutarse como un "
"usuario diferente."

#: ../../source/os/index.rst:384
msgid ""
"Before running the example, change the ``TEST_GID`` and ``TEST_UID`` values to "
"match a real user defined on the system."
msgstr ""
"Antes de ejecutar el ejemplo, cambie los valores de ``TEST_GID`` y ``TEST_UID`` "
"para que coincidan con un usuario real definido en el sistema."

#: ../../source/os/index.rst
msgid "os_process_user_example.py"
msgstr "os_process_user_example.py"

#: ../../source/os/index.rst:391
msgid ""
"When run as user with id of 502 and group 502 on OS X, this output is produced:"
msgstr ""
"Cuando se ejecuta como usuario con id de 502 y el grupo 502 en OS X, se produce "
"esta salida:"

#: ../../source/os/index.rst:413
msgid ""
"The values do not change because when it is not running as root, a process "
"cannot change its effective owner value. Any attempt to set the effective user "
"id or group id to anything other than that of the current user causes an "
"``OSError``.  Running the same script using ``sudo`` so that it starts out with "
"root privileges is a different story."
msgstr ""
"Los valores no cambian porque cuando no se está ejecutando como root, un "
"proceso no puede cambiar su valor de propietario efectivo. Cualquier intento de "
"establecer el ID efectivo de usuario o grupo a algo distinto del usuario actual "
"provocará un ``OSError``. Ejecutar el mismo script usando ``sudo`` para que "
"comience con privilegios de root es una historia diferente."

#: ../../source/os/index.rst:445
msgid ""
"In this case, since it starts as root, the script can change the effective user "
"and group for the process. Once the effective UID is changed, the process is "
"limited to the permissions of that user. Because non-root users cannot change "
"their effective group, the program needs to change the group before changing "
"the user."
msgstr ""
"En este caso, ya que se inicia como root, el script puede cambiar el usuario y  "
"grupo efectivos para el proceso. Una vez que se cambia el UID efectivo, el "
"proceso se limita a los permisos de ese usuario. Dado que los usuarios no root "
"no pueden cambiar su grupo efectivo, el programa debe cambiar el grupo antes de "
"cambiar al usuario."

#: ../../source/os/index.rst:452
msgid "Managing the Process Environment"
msgstr "Administración del entorno del proceso"

#: ../../source/os/index.rst:454
msgid ""
"Another feature of the operating system exposed to a program though the ``os`` "
"module is the environment. Variables set in the environment are visible as "
"strings that can be read through ``os.environ`` or ``getenv()``. Environment "
"variables are commonly used for configuration values such as search paths, file "
"locations, and debug flags. This example shows how to retrieve an environment "
"variable, and pass a value through to a child process."
msgstr ""
"Otra característica del sistema operativo expuesto a un programa a través del "
"módulo ``os`` es el entorno. Las variables establecidas en el entorno son "
"visibles como cadenas que se pueden leer a través de ``os.environ`` o "
"``getenv()``. Las variables de entorno se utilizan comúnmente para valores de "
"configuración como rutas de búsqueda, ubicaciones de archivos y marcas de "
"depuración. En este ejemplo se muestra cómo recuperar una variable de entorno y "
"pasar un valor a un proceso secundario."

#: ../../source/os/index.rst
msgid "os_environ_example.py"
msgstr "os_environ_example.py"

#: ../../source/os/index.rst:466
msgid ""
"The ``os.environ`` object follows the standard Python mapping API for "
"retrieving and setting values. Changes to ``os.environ`` are exported for child "
"processes."
msgstr ""
"El objeto ``os.environ`` sigue la API estándar de mapeo Python para recuperar y "
"establecer valores. Los cambios en ``os.environ`` se exportan para procesos "
"secundarios."

#: ../../source/os/index.rst:493
msgid "Managing the Process Working Directory"
msgstr "Administración  del Directorio de Trabajo del Proceso"

#: ../../source/os/index.rst:495
msgid ""
"Operating systems with hierarchical file systems have a concept of the *current "
"working directory* -- the directory on the file system the process uses as the "
"starting location when files are accessed with relative paths.  The current "
"working directory can be retrieved with ``getcwd()`` and changed with "
"``chdir()``."
msgstr ""
"Los sistemas operativos con sistemas de archivos jerárquicos tienen un concepto "
"del *directorio de trabajo actual* -- el directorio del sistema de archivos que "
"el proceso utiliza como la ubicación inicial cuando se accede a los archivos "
"con rutas de acceso relativas. El directorio de trabajo actual puede ser "
"recuperado con ``getcwd()`` y cambiado con ``chdir()``."

#: ../../source/os/index.rst
msgid "os_cwd_example.py"
msgstr "os_cwd_example.py"

#: ../../source/os/index.rst:505
msgid ""
"``os.curdir`` and ``os.pardir`` are used to refer to the current and parent "
"directories in a portable manner."
msgstr ""
"``os.curdir`` y ``os.pardir`` se utilizan para referirse a los directorios "
"actuales y parentales de forma portable."

#: ../../source/os/index.rst:533
msgid "Running External Commands"
msgstr "Ejecutando Comandos Externos"

#: ../../source/os/index.rst:537
msgid ""
"Many of these functions for working with processes have limited portability. "
"For a more consistent way to work with processes in a platform independent "
"manner, see the :mod:`subprocess` module instead."
msgstr ""
"Muchas de estas funciones para trabajar con procesos tienen portabilidad "
"limitada. Para obtener una forma más consistente de trabajar con procesos de "
"una manera independiente de la plataforma, vea en su lugar el módulo mod:"
"`subprocess`."

#: ../../source/os/index.rst:542
msgid ""
"The most basic way to run a separate command, without interacting with it at "
"all, is ``system()``. It takes a single string argument, which is the command "
"line to be executed by a sub-process running a shell."
msgstr ""
"La forma más básica de ejecutar un comando independiente, sin interactuar con "
"él, es ``system()``. Se necesita un argumento de cadena única, que es la línea "
"de comandos que debe ejecutar un subproceso que ejecuta un shell."

#: ../../source/os/index.rst
msgid "os_system_example.py"
msgstr "os_system_example.py"

#: ../../source/os/index.rst:550
msgid ""
"The return value of ``system()`` is the exit value of the shell running the "
"program packed into a 16 bit number, with the high byte the exit status and the "
"low byte the signal number that caused the process to die, or zero."
msgstr ""
"El valor de retorno de ``system()`` es el valor de salida del shell que ejecuta "
"el programa empaquetado en un número de 16 bits, con el byte alto del estado de "
"salida y el byte bajo del número de señal que causó la muerte del proceso, o "
"cero."

# no sé como traducir "globbing"
#: ../../source/os/index.rst:573
msgid ""
"Since the command is passed directly to the shell for processing, it can "
"include shell syntax such as globbing or environment variables."
msgstr ""
"Dado que el comando se pasa directamente al shell para su procesamiento, puede "
"incluir sintaxis de shell, como expansión o variables de entorno."

#: ../../source/os/index.rst
msgid "os_system_shell.py"
msgstr "os_system_shell.py"

#: ../../source/os/index.rst:580
msgid ""
"The environment variable ``$TMPDIR`` in this string is expanded when the shell "
"runs the command line."
msgstr ""
"La variable de entorno ``$TMPDIR`` en esta cadena se expande cuando el shell "
"ejecuta la línea de comandos."

#: ../../source/os/index.rst:596
msgid ""
"Unless the command is explicitly run in the background, the call to "
"``system()`` blocks until it is complete. Standard input, output, and error "
"from the child process are tied to the appropriate streams owned by the caller "
"by default, but can be redirected using shell syntax."
msgstr ""
"A menos que el comando se ejecute explícitamente en segundo plano, la llamada a "
"``system()`` bloquea hasta que su ejecución se complete. La entrada, salida y "
"el error estándar del proceso hijo están vinculados a los flujos apropiados de "
"propiedad del llamador por defecto, pero pueden ser redirigidos usando la "
"sintaxis de shell."

#: ../../source/os/index.rst
msgid "os_system_background.py"
msgstr "os_system_background.py"

#: ../../source/os/index.rst:606
msgid ""
"This is getting into shell trickery, though, and there are better ways to "
"accomplish the same thing."
msgstr ""
"Sin embargo, esto es entrar en trucos de la shell, y hay mejores maneras de "
"lograr lo mismo."

#: ../../source/os/index.rst:627
msgid "Creating Processes with os.fork()"
msgstr "Creating Processes with os.fork()"

#: ../../source/os/index.rst:629
msgid ""
"The POSIX functions ``fork()`` and ``exec()`` (available under Mac OS X, Linux, "
"and other Unix variants) are exposed via the ``os`` module. Entire books have "
"been written about reliably using these functions, so check the library or "
"bookstore for more details than are presented here in this introduction."
msgstr ""
"Las funciones POSIX ``fork()`` y ``exec()`` (disponibles bajo Mac OS X, Linux y "
"otras variantes Unix) están expuestas a través del módulo ``os``. Se han "
"escrito libros enteros sobre el uso confiable de estas funciones, así que "
"consulte la biblioteca o librería para obtener más detalles de los que se "
"presentan aquí en esta introducción."

#: ../../source/os/index.rst:635
msgid "To create a new process as a clone of the current process, use ``fork()``:"
msgstr ""
"Para crear un nuevo proceso como un clon del proceso actual, use ``fork()``:"

#: ../../source/os/index.rst
msgid "os_fork_example.py"
msgstr "os_fork_example.py"

#: ../../source/os/index.rst:642
msgid ""
"The output will vary based on the state of the system each time the example is "
"run, but it will look something like:"
msgstr ""
"La salida variará según el estado del sistema cada vez que se ejecute el "
"ejemplo, pero se verá algo como:"

#: ../../source/os/index.rst:658
msgid ""
"After the fork, there are two processes running the same code. For a program to "
"tell which one it is in, it needs to check the return value of ``fork()``. If "
"the value is ``0``, the current process is the child.  If it is not ``0``, the "
"program is running in the parent process and the return value is the process id "
"of the child process."
msgstr ""
"Después del fork, hay dos procesos que ejecutan el mismo código. Para decirle a "
"un programa en cuál proceso está, necesita comprobar el valor de retorno de "
"``fork()``. Si el valor es \"0\", el proceso actual es el hijo. Si no es ``0``, "
"el programa se ejecuta en el proceso padre y el valor devuelto es el id del "
"proceso hijo."

#: ../../source/os/index.rst
msgid "os_kill_example.py"
msgstr "os_kill_example.py"

#: ../../source/os/index.rst:668
msgid ""
"The parent can send signals to the child process using ``kill()`` and the :mod:"
"`signal` module. First, define a signal handler to be invoked when the signal "
"is received.  Then ``fork()``, and in the parent pause a short amount of time "
"before sending a ``USR1`` signal using ``kill()``. This example uses a short "
"pause to give the child process time to set up the signal handler. A real "
"application, would not need (or want) to call ``sleep()``.  In the child, set "
"up the signal handler and go to sleep for a while to give the parent time to "
"send the signal."
msgstr ""
"El padre puede enviar señales al proceso hijo utilizando el módulo ``kill()`` y "
"el módulo :mod:`signal`. En primer lugar, defina un manejador de señales que se "
"invocará cuando se reciba la señal. Luego ``fork()``, y en el padre se pausa un "
"corto período de tiempo antes de enviar una señal ``USR1`` usando ``kill()``. "
"En este ejemplo se utiliza una breve pausa para asignar al proceso hijo el "
"tiempo necesario para configurar el controlador de señales. Una aplicación "
"real, no necesitaría (o querría) llamar ``sleep()``. En el hijo, configure el "
"manejador de señal y va a dormir por un tiempo para dar al padre tiempo para "
"enviar la señal."

#: ../../source/os/index.rst:696
msgid ""
"A simple way to handle separate behavior in the child process is to check the "
"return value of ``fork()`` and branch. More complex behavior may call for more "
"code separation than a simple branch. In other cases, there may be an existing "
"program that needs to be wrapped. For both of these situations, the ``exec*()`` "
"series of functions can be used to run another program."
msgstr ""
"Una manera simple de manejar el comportamiento separado en el proceso hijo es "
"comprobar el valor de retorno de ``fork()`` y la rama. Un comportamiento más "
"complejo puede requerir más separación de código que una simple rama. En otros "
"casos, puede haber un programa existente que necesita ser envuelto. Para ambas "
"situaciones, la serie de funciones ``exec*()`` se puede utilizar para ejecutar "
"otro programa."

#: ../../source/os/index.rst
msgid "os_exec_example.py"
msgstr "os_exec_example.py"

#: ../../source/os/index.rst:707
msgid ""
"When a program is run by ``exec()``, the code from that program replaces the "
"code from the existing process."
msgstr ""
"Cuando un programa es ejecutado por ``exec()``, el código de ese programa "
"reemplaza el código del proceso existente."

#: ../../source/os/index.rst:722
msgid ""
"There are many variations of ``exec()``, depending on the form in which the "
"arguments are available, whether the path and environment of the parent process "
"should be copied to the child, etc.  For all variations, the first argument is "
"a path or filename and the remaining arguments control how that program runs. "
"They are either passed as command line arguments or override the process "
"\"environment\" (see ``os.environ`` and ``os.getenv``).  Refer to the library "
"documentation for complete details."
msgstr ""
"Hay muchas variaciones de ``exec()``, dependiendo de la forma en la que los "
"argumentos están disponibles, si la ruta y el entorno del proceso padre deben "
"ser copiados al hijo, etc. Para todas las variaciones, el primer argumento es "
"una ruta de acceso o nombre de archivo y los argumentos restantes controlan "
"cómo se ejecuta ese programa. Se pasan como argumentos de línea de comandos o "
"anulan el proceso \"environment\" (ver ``os.environ`` y ``os.getenv``). "
"Consulte la documentación de la biblioteca para obtener detalles completos."

#: ../../source/os/index.rst:732
msgid "Waiting for Child Processes"
msgstr "Esperando por Procesos Hijos"

#: ../../source/os/index.rst:734
msgid ""
"Many computationally intensive programs use multiple processes to work around "
"the threading limitations of Python and the global interpreter lock. When "
"starting several processes to run separate tasks, the master will need to wait "
"for one or more of them to finish before starting new ones, to avoid "
"overloading the server. There are a few different ways to do that using "
"``wait()`` and related functions."
msgstr ""
"Muchos programas computacionalmente intensivos utilizan múltiples procesos para "
"trabajar en torno a las limitaciones de subprocesamiento de Python y el bloqueo "
"de intérprete global. Al iniciar varios procesos para ejecutar tareas "
"independientes, el maestro tendrá que esperar a que uno o varios terminen antes "
"de iniciar otros nuevos, para evitar sobrecargar el servidor. Hay algunas "
"maneras diferentes de hacer eso usando ``wait()`` y funciones relacionadas."

#: ../../source/os/index.rst:741
msgid ""
"When it does not matter which child process might exit first, use ``wait()``.  "
"It returns as soon as any child process exits."
msgstr ""
"Cuando no importa qué proceso secundario salga primero, use ``wait()``. Retorna "
"tan pronto como cualquier proceso hijo salga."

#: ../../source/os/index.rst
msgid "os_wait_example.py"
msgstr "os_wait_example.py"

#: ../../source/os/index.rst:748
msgid ""
"The return value from ``wait()`` is a tuple containing the process id and exit "
"status combined into a 16-bit value.  The low byte is the number of the signal "
"that killed the process, and the high byte is the status code returned by the "
"process when it exited."
msgstr ""
"El valor de retorno de ``wait()`` es una tupla que contiene el ID de proceso y "
"el estado de salida combinados en un valor de 16 bits. El byte bajo es el "
"número de la señal que mató el proceso, y el byte alto es el código de estado "
"devuelto por el proceso cuando salió."

#: ../../source/os/index.rst:774
msgid "To wait for a specific process, use ``waitpid()``."
msgstr "Para esperar un proceso específico, use ``waitpid()``."

#: ../../source/os/index.rst
msgid "os_waitpid_example.py"
msgstr "os_waitpid_example.py"

#: ../../source/os/index.rst:780
msgid ""
"Pass the process id of the target process, and ``waitpid()`` blocks until that "
"process exits."
msgstr ""
"Pase el ID del proceso de destino y ``waitpid()`` bloquea hasta que el proceso "
"salga."

#: ../../source/os/index.rst:804
msgid ""
"``wait3()`` and ``wait4()`` work in a similar manner, but return more detailed "
"information about the child process with the pid, exit status, and resource "
"usage."
msgstr ""
"``wait3()`` y ``wait4()`` funcionan de manera similar, pero devuelven "
"información más detallada sobre el proceso hijo con el pid, el estado de salida "
"y el uso de recursos."

#: ../../source/os/index.rst:809
msgid "Spawning New Processes"
msgstr "Engendrando Nuevos Procesos"

#: ../../source/os/index.rst:811
msgid ""
"As a convenience, the ``spawn()`` family of functions handles the ``fork()`` "
"and ``exec()`` in one statement:"
msgstr ""
"Convenientemente, la familia de funciones ``spawn()`` maneja ``fork()`` y "
"``exec()`` en una instrucción:"

#: ../../source/os/index.rst
msgid "os_spawn_example.py"
msgstr "os_spawn_example.py"

#: ../../source/os/index.rst:818
msgid ""
"The first argument is a mode indicating whether or not to wait for the process "
"to finish before returning.  This example waits.  Use ``P_NOWAIT`` to let the "
"other process start, but then resume in the current process."
msgstr ""
"El primer argumento es un modo que indica si se espera o no que el proceso "
"termine antes de volver. Este ejemplo espera. Utilice ``P_NOWAIT`` para dejar "
"que el otro proceso inicie, pero luego reanude en el proceso actual."

#: ../../source/os/index.rst:836
msgid "Operating System Error Codes"
msgstr "Códigos de error del sistema operativo"

#: ../../source/os/index.rst:838
msgid ""
"Error codes defined by the operating system and managed in the :mod:`errno` "
"module can be translated to message strings using ``strerror()``."
msgstr ""
"Los códigos de error definidos por el sistema operativo y gestionados en el "
"módulo :mod:`errno` pueden traducirse a cadenas de mensajes utilizando "
"``strerror()``."

#: ../../source/os/index.rst
msgid "os_strerror.py"
msgstr "os_strerror.py"

#: ../../source/os/index.rst:846
msgid ""
"This example shows the messages associated with some error codes that come up "
"frequently."
msgstr ""
"Este ejemplo muestra los mensajes asociados con algunos códigos de error que "
"aparecen con frecuencia."

#: ../../source/os/index.rst:865
msgid ":pydoc:`os`"
msgstr ":pydoc:`os`"

#: ../../source/os/index.rst:867
msgid ":ref:`Python 2 to 3 porting notes for os <porting-os>`"
msgstr ":ref:`Notas sobre portar Python 2 a 3 para os <porting-os>`"

#: ../../source/os/index.rst:869
msgid ""
":mod:`signal` -- The section on the ``signal`` module goes over signal handling "
"techniques in more detail."
msgstr ""
":mod:`signal` -- La sección del módulo ``signal`` revisa más detalladamente las "
"técnicas de manejo de señales."

#: ../../source/os/index.rst:872
msgid ":mod:`subprocess` -- The ``subprocess`` module supersedes ``os.popen()``."
msgstr ":mod:`subprocess` -- El módulo ``subprocess`` sustituye a ``os.popen()``."

#: ../../source/os/index.rst:875
msgid ""
":mod:`multiprocessing` -- The ``multiprocessing`` module makes working with "
"extra processes easier."
msgstr ""
":mod:`multiprocesamiento` -- El módulo ``multiprocesamiento`` facilita el "
"trabajo con procesos adicionales."

#: ../../source/os/index.rst:878
msgid ""
":mod:`tempfile` -- The ``tempfile`` module for working with temporary files."
msgstr ""
":mod:`tempfile` -- El módulo ``tempfile`` para trabajar con archivos temporales."

#: ../../source/os/index.rst:881
msgid ""
":ref:`shutil-directory-functions` -- The :mod:`shutil` module also includes "
"functions for working with directory trees."
msgstr ""
":ref:`shutil-directory-functions` -- El módulo :mod:`shutil` también incluye "
"funciones para trabajar con árboles de directorios."

#: ../../source/os/index.rst:884
msgid ""
"`Speaking UNIX, Part 8. <http://www.ibm.com/developerworks/aix/library/au-"
"speakingunix8/index.html>`__ -- Learn how UNIX multitasks."
msgstr ""
"`Speaking UNIX, Part 8. <http://www.ibm.com/developerworks/aix/library/au-"
"speakingunix8/index.html>`__ -- Aprenda sobre multitareas en UNIX."

#: ../../source/os/index.rst:888
msgid ""
"`Standard streams <https://en.wikipedia.org/wiki/Standard_streams>`__ -- For "
"more discussion of stdin, stdout, and stderr."
msgstr ""
"`Standard streams <https://en.wikipedia.org/wiki/Standard_streams>`__ -- Para "
"más información de stdin, stdout, and stderr."

#: ../../source/os/index.rst:891
msgid ""
"`Delve into Unix Process Creation <http://www.ibm.com/developerworks/aix/"
"library/au-unixprocess.html>`__ -- Explains the life cycle of a Unix process."
msgstr ""
"`Delve into Unix Process Creation <http://www.ibm.com/developerworks/aix/"
"library/au-unixprocess.html>`__ -- Explica el ciclo de vida de un proceso Unix."

#: ../../source/os/index.rst:895
msgid ""
"*Advanced Programming in the UNIX(R) Environment* By W. Richard Stevens and "
"Stephen A. Rago.  Published by Addison-Wesley Professional, 2005.  ISBN-10: "
"0201433079 -- This book covers working with multiple processes, such as "
"handling signals, closing duplicated file descriptors, etc."
msgstr ""
"*Advanced Programming in the UNIX(R) Environment* Por W. Richard Stevens y "
"Stephen A. Rago.  Publicado por Addison-Wesley Professional, 2005.  ISBN-10: "
"0201433079 -- Este libro cubre trabajo con múltiples procesos, tales como "
"manejar señales, cerrar descriptores de archivos duplicados, etc."

#~ msgid "1.4 (or earlier)"
#~ msgstr "1.4 (o anterior)"

#~ msgid "Process Owner"
#~ msgstr "Dueño del processo"
