# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Doug Hellmann
# This file is distributed under the same license as the PyMOTW-3 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMOTW-3 \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-15 15:56-0300\n"
"PO-Revision-Date: 2015-10-28 18:13-0300\n"
"Last-Translator: \n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../source/argparse/index.rst:3
#, fuzzy
msgid "argparse --- Command-Line Option and Argument Parsing"
msgstr "argparse -- Opción de línea de comandos y el argumento de análisis."

#: ../../source/argparse/index.rst:8
#, fuzzy
msgid "Command-line option and argument parsing."
msgstr "Opción de línea de comandos y el argumento de análisis."

#: ../../source/argparse/index.rst:10
#, fuzzy
msgid ""
"The ``argparse`` module includes tools for building command line argument"
" and option processors. It was added to Python 2.7 as a replacement for "
":mod:`optparse`.  The implementation of ``argparse`` supports features "
"that would not have been easy to add to :mod:`optparse`, and that would "
"have required backwards-incompatible API changes, so a new module was "
"brought into the library instead. :mod:`optparse` is now deprecated."
msgstr ""
"El módulo :mod:`argparse` fue agregado a Python 2.7 como un reemplazo de "
":mod:`optparse`.  La implementación de :mod:`argparse` soporta "
"características que no habrían sido fáciles de agregar a :mod:`optparse`,"
" y que habría requerido cambios hacia atrás en la API incompatibles, por "
"lo que el nuevo módulo fue añadido a la biblioteca en su lugar.  "
":mod:`optparse` sigue siendo soportado, pero es probable que no reciba "
"nuevas características."

#: ../../source/argparse/index.rst:19
#, fuzzy
msgid "Setting Up a Parser"
msgstr "La creación de un Analizador"

#: ../../source/argparse/index.rst:21
msgid ""
"The first step when using ``argparse`` is to create a parser object and "
"tell it what arguments to expect.  The parser can then be used to process"
" the command-line arguments when the program runs.  The constructor for "
"the parser class (``ArgumentParser``) takes several arguments to set up "
"the description used in the help text for the program and other global "
"behaviors or settings."
msgstr ""

#: ../../source/argparse/index.rst:37
msgid "Defining Arguments"
msgstr "Definiendo argumentos"

#: ../../source/argparse/index.rst:39
msgid ""
"``argparse`` is a complete argument processing library. Arguments can "
"trigger different actions, specified by the ``action`` argument to "
"``add_argument()``. Supported actions include storing the argument "
"(singly, or as part of a list), storing a constant value when the "
"argument is encountered (including special handling for true/false values"
" for Boolean switches), counting the number of times an argument is seen,"
" and calling a callback to use custom processing instructions."
msgstr ""
"El primer paso cuando se utiliza: mod: `argparse` es crear un objeto de "
"programa de análisis y decirle qué argumentos esperar. El analizador se "
"puede utilizar para procesar los argumentos de la línea de comandos "
"cuando el programa se ejecuta."

#: ../../source/argparse/index.rst:47
msgid ""
"The default action is to store the argument value. If a type is provided,"
" the value is converted to that type before it is stored. If the ``dest``"
" argument is provided, the value is saved using that name when the "
"command-line arguments are parsed."
msgstr ""
"La clase del analizador es :class: `ArgumentParser`. El constructor toma "
"varios argumentos para establecer la descripción utilizada en el texto de"
" ayuda para el programa y otros comportamientos o configuración global."

#: ../../source/argparse/index.rst:53
#, fuzzy
msgid "Parsing a Command-Line"
msgstr "Analizar una línea de comandos"

#: ../../source/argparse/index.rst:55
msgid ""
"After all of the arguments are defined, parse the command-line by passing"
" a sequence of argument strings to ``parse_args()``. By default, the "
"arguments are taken from ``sys.argv[1:]``, but any list of strings can be"
" used. The options are processed using the GNU/POSIX syntax, so option "
"and argument values can be mixed in the sequence."
msgstr ""

#: ../../source/argparse/index.rst:61
msgid ""
"The return value from ``parse_args()`` is a ``Namespace`` containing the "
"arguments to the command. The object holds the argument values as "
"attributes, so if the argument's ``dest`` is set to ``\"myoption\"``, the"
" value is accessible as ``args.myoption``."
msgstr ""

#: ../../source/argparse/index.rst:67
msgid "Simple Examples"
msgstr ""
"Una vez que todos los argumentos se definen, se puede analizar la línea "
"de comandos mediante el paso de una secuencia de cadenas de argumentos a "
":func: `parse_args ()`. Por defecto, los argumentos son tomados de "
"``sys.argv [1:] '', pero también puede pasar su propia lista. Las "
"opciones se procesan utilizando la sintaxis de GNU / POSIX, por lo que "
"los valores de opción y los argumentos se pueden mezclar en la secuencia."

#: ../../source/argparse/index.rst:69
msgid ""
"Here is a simple example with three different options: a Boolean option "
"(``-a``), a simple string option (``-b``), and an integer option "
"(``-c``)."
msgstr ""
"El valor de retorno de :func: `parse_args ()` es un :class: `Namespace` "
"que contiene los argumentos para el comando. El objeto contiene los "
"valores de los argumentos como atributos, así que si su argumento "
"``dest`` es ``\"myoption\"``, se accede al valor como ``args.myoption``."

#: ../../source/argparse/index.rst
#, fuzzy
msgid "argparse_short.py"
msgstr ""
"Nombres de opción \"largo\", con más de un solo carácter en su nombre, se"
" manejan de la misma manera."

#: ../../source/argparse/index.rst:77
#, fuzzy
msgid ""
"There are a few ways to pass values to single character options. The "
"previous example uses two different forms, ``-bval`` and ``-c val``."
msgstr ""
"Hay algunas maneras de pasar valores a las opciones de un solo carácter. "
"El ejemplo anterior utiliza dos formas diferentes, ``-bval`` y ``-c "
"val``."

#: ../../source/argparse/index.rst:92
msgid ""
"The type of the value associated with ``'c'`` in the output is an "
"integer, since the ``ArgumentParser`` was told to convert the argument "
"before storing it."
msgstr ""

#: ../../source/argparse/index.rst:96
msgid ""
"\"Long\" option names, with more than a single character in their name, "
"are handled in the same way."
msgstr ""
"El tipo de valor asociado con ``'c'`` en la salida es un entero, ya que "
"la :class:`ArgumentParser` convirtió el argumento antes de guardarlo."

#: ../../source/argparse/index.rst
msgid "argparse_long.py"
msgstr ""
"Nombres de opción \"largo\", con más de un solo carácter en su nombre, se"
" manejan de la misma manera."

#: ../../source/argparse/index.rst:103
#, fuzzy
msgid "The results are similar."
msgstr "Y los resultados son similares:"

#: ../../source/argparse/index.rst:117
msgid ""
"``argparse`` is a full command-line argument parser tool, and handles "
"both optional and required arguments."
msgstr ""

#: ../../source/argparse/index.rst
#, fuzzy
msgid "argparse_arguments.py"
msgstr ""
"Un programa para trabajar con directorios en el sistema de archivos "
"podría definir comandos para crear, eliminar y listar el contenido de un "
"directorio de la siguiente manera:"

#: ../../source/argparse/index.rst:124
msgid ""
"In this example, the \"count\" argument is an integer and the \"units\" "
"argument is saved as a string.  If either is left off of the command-"
"line, or the value given cannot be converted to the right type, an error "
"is reported."
msgstr ""
"En este ejemplo, el argumento de \"count\" es un entero y el argumento de"
" \"units\" se guarda como una cadena. Si bien no se proporciona en la "
"línea de comandos, o el valor dado no se puede convertir al tipo "
"correcto, se informa de un error."

#: ../../source/argparse/index.rst:160
msgid "Argument Actions"
msgstr "Acciones de argumentos"

#: ../../source/argparse/index.rst:162
msgid ""
"Any of six built-in actions can be triggered when an argument is "
"encountered."
msgstr ""
"Hay seis acciones integradas que se pueden activar cuando se encuentra un"
" argumento:"

#: ../../source/argparse/index.rst:167
msgid "``store``"
msgstr "``store``"

#: ../../source/argparse/index.rst:166
msgid ""
"Save the value, after optionally converting it to a different type. This "
"is the default action taken if none is specified explicitly."
msgstr ""
"Guardar el valor, después de convertir opcionalmente a un tipo diferente."
" Esta es la acción por defecto toma si no se especifica de forma "
"explícita."

#: ../../source/argparse/index.rst:172
msgid "``store_const``"
msgstr "``store_const``"

#: ../../source/argparse/index.rst:170
#, fuzzy
msgid ""
"Save a value defined as part of the argument specification, rather than a"
" value that comes from the arguments being parsed.  This is typically "
"used to implement command-line flags that are not Booleans."
msgstr ""
"Guarda un valor definido como parte de la especificación de argumentos, "
"en lugar de un valor que viene de los argumentos que se analizan. Esto "
"normalmente se utiliza para implementar banderas de línea de comandos que"
" no son booleanos."

#: ../../source/argparse/index.rst:176
msgid "``store_true`` / ``store_false``"
msgstr "``store_true`` / ``store_false``"

#: ../../source/argparse/index.rst:175
msgid ""
"Save the appropriate Boolean value.  These actions are used to implement "
"Boolean switches."
msgstr ""
"Guarda el valor booleano apropiado. Estas acciones se utilizan para "
"implementar interruptores booleanos."

#: ../../source/argparse/index.rst:180
msgid "``append``"
msgstr "``append``"

#: ../../source/argparse/index.rst:179
msgid ""
"Save the value to a list.  Multiple values are saved if the argument is "
"repeated."
msgstr ""
"Guarda el valor de una lista. Varios valores se guardan si el argumento "
"se repite."

#: ../../source/argparse/index.rst:183
msgid "``append_const``"
msgstr "``append_const``"

#: ../../source/argparse/index.rst:183
msgid "Save a value defined in the argument specification to a list."
msgstr "Guarda un valor definido en la especificación de argumento para una lista."

#: ../../source/argparse/index.rst:186
msgid "``version``"
msgstr "``version``"

#: ../../source/argparse/index.rst:186
msgid "Prints version details about the program and then exits."
msgstr "Prints versión detalles sobre el programa y luego se cierra."

#: ../../source/argparse/index.rst:188
msgid ""
"This example program demonstrates each action type, with the minimum "
"configuration needed for each to work."
msgstr ""

#: ../../source/argparse/index.rst
msgid "argparse_action.py"
msgstr ""

#: ../../source/argparse/index.rst:195
msgid ""
"The ``-t`` and ``-f`` options are configured to modify different option "
"values, each storing either True or False.  The ``dest`` values for "
"``-A`` and ``-B`` are the same so that their constant values are appended"
" to the same list."
msgstr ""

#: ../../source/argparse/index.rst:291
msgid "Option Prefixes"
msgstr "Los prefijos Opción"

#: ../../source/argparse/index.rst:293
#, fuzzy
msgid ""
"The default syntax for options is based on the Unix convention of "
"signifying command-line switches using a dash prefix (\"``-``\"). "
"``argparse`` supports other prefixes, so a program can conform to the "
"local platform default (i.e., use \"``/``\" on Windows) or follow a "
"different convention."
msgstr ""
"La sintaxis predeterminada para las opciones se basa en la convención de "
"Unix de significar la línea de comandos utilizando un prefijo de \"-\". :"
" mod: `argparse` soporta otros prefijos, por lo que puede hacer que su "
"programa se ajuste a los valores de la plataforma local (es decir, el uso"
" de\" / \"en Windows) o seguir una convención diferente."

#: ../../source/argparse/index.rst
#, fuzzy
msgid "argparse_prefix_chars.py"
msgstr ""
"Un programa para trabajar con directorios en el sistema de archivos "
"podría definir comandos para crear, eliminar y listar el contenido de un "
"directorio de la siguiente manera:"

#: ../../source/argparse/index.rst:303
#, fuzzy
msgid ""
"Set the ``prefix_chars`` parameter for the ``ArgumentParser`` to a string"
" containing all of the characters that should be allowed to signify "
"options.  It is important to understand that although ``prefix_chars`` "
"establishes the allowed switch characters, the individual argument "
"definitions specify the syntax for a given switch. This gives explicit "
"control over whether options using different prefixes are aliases (such "
"as might be the case for platform-independent command-line syntax) or "
"alternatives (e.g., using \"``+``\" to indicate turning a switch on and "
"\"``-``\" to turn it off). In the previous example, ``+a`` and ``-a`` are"
" separate arguments, and ``//noarg`` can also be given as ``++noarg``, "
"but not ``--noarg``."
msgstr ""
"Ajuste el parámetro *prefix_chars* para :class:`ArgumentParser` a una "
"cadena que contiene todos los caracteres que se debe permitir para "
"significar opciones. Es importante entender que aunque *prefix_chars* "
"establece los caracteres de conmutación permitidos, las definiciones de "
"argumentos individuales especifican la sintaxis de un interruptor dado. "
"Esto le da un control explícito sobre si las opciones que utilizan "
"diferentes prefijos son alias (como podría ser el caso de la sintaxis de "
"línea de comandos independiente de la plataforma) o alternativas (por "
"ejemplo, utilizando \"``+``\" para indicar girar un interruptor de "
"encendido y \"``-``\" para apagarlo). En el ejemplo anterior, ``+a`` y "
"``-a`` son argumentos separados, y ``//noarg`` también puede darse como "
"``++noarg``, pero no ``--noarg ``."

#: ../../source/argparse/index.rst:363
msgid "Sources of Arguments"
msgstr "Fuentes de argumentos"

#: ../../source/argparse/index.rst:365
msgid ""
"In the examples so far, the list of arguments given to the parser has "
"come from a list passed in explicitly, or were taken implicitly from "
"``sys.argv``.  Passing the list explicitly is useful when using "
"``argparse`` to process command-line-like instructions that do not come "
"from the command-line (such as in a configuration file)."
msgstr ""

#: ../../source/argparse/index.rst
msgid "argparse_with_shlex.py"
msgstr ""

#: ../../source/argparse/index.rst:376
msgid "This example uses :mod:`configparser` to read a configuration file."
msgstr ""
":mod:`shlex` hace que sea fácil para dividir la cadena almacenada en el "
"archivo de configuración."

#: ../../source/argparse/index.rst:380
msgid ""
":mod:`shlex` makes it easy to split the string stored in the "
"configuration file."
msgstr ""

#: ../../source/argparse/index.rst:397
msgid ""
"An alternative to processing the configuration file in application code "
"is to tell ``argparse`` how to recognize an argument that specifies an "
"input file containing a set of arguments to be processed using "
"``fromfile_prefix_chars``."
msgstr ""

#: ../../source/argparse/index.rst
msgid "argparse_fromfile_prefix_chars.py"
msgstr ""

#: ../../source/argparse/index.rst:406
#, fuzzy
msgid ""
"This example stops when it finds an argument prefixed with ``@``, then "
"reads the named file to find more arguments.  The file should contain one"
" argument per line, as in this example."
msgstr ""
"En este ejemplo se detiene cuando encuentra un argumento con el prefijo "
"``@'', a continuación, lee el archivo llamado para encontrar más "
"argumentos. Por ejemplo, un archivo de entrada "
"``argparse_fromfile_prefix_chars.txt`` contiene una serie de argumentos, "
"uno por línea:"

#: ../../source/argparse/index.rst
msgid "argparse_fromfile_prefix_chars.txt"
msgstr ""

#: ../../source/argparse/index.rst:413
#, fuzzy
msgid ""
"The output produced when processing ``argparse_from_prefix_chars.txt`` "
"follows."
msgstr "La salida producida al procesar el archivo es:"

#: ../../source/argparse/index.rst:429
msgid "Help Output"
msgstr ""

#: ../../source/argparse/index.rst:432
#, fuzzy
msgid "Automatically Generated Help"
msgstr "Opciones generados automáticamente"

#: ../../source/argparse/index.rst:434
msgid ""
"``argparse`` will automatically add options to generate help, if "
"configured to do so.  The ``add_help`` argument to ``ArgumentParser`` "
"controls the help-related options."
msgstr ""

#: ../../source/argparse/index.rst
msgid "argparse_with_help.py"
msgstr ""

#: ../../source/argparse/index.rst:442
msgid ""
"The help options (``-h`` and ``--help``) are added by default, but can be"
" disabled by setting ``add_help`` to false."
msgstr ""

#: ../../source/argparse/index.rst
msgid "argparse_without_help.py"
msgstr ""
"Las opciones de ayuda (``-h`` y ``--help``) se añaden por defecto, pero "
"se puede desactivar configurando *add_help* como falso."

#: ../../source/argparse/index.rst:449
msgid ""
"Although ``-h`` and ``--help`` are defacto standard option names for "
"requesting help, some applications or uses of ``argparse`` either do not "
"need to provide help or need to use those option names for other "
"purposes."
msgstr ""
"Aunque ``-h`` y ``--help`` son nombres de opción de facto para solicitar "
"ayuda, algunas aplicaciones o usos de :mod:`argparse` o bien no necesitan"
" proporcionar ayuda o necesitan utilizar esos nombres de opciones para "
"otros fines."

#: ../../source/argparse/index.rst:480
msgid "Customizing Help"
msgstr ""

#: ../../source/argparse/index.rst:482
msgid ""
"For applications that need to handle the help output directly, some of "
"the utility methods of ``ArgumentParser`` will be useful in creating "
":ref:`custom actions <argparse-custom-actions>` to print help with extra "
"information."
msgstr ""

#: ../../source/argparse/index.rst
msgid "argparse_custom_help.py"
msgstr ""

#: ../../source/argparse/index.rst:491
msgid ""
":meth:`print_usage` prints the short usage message for an argument "
"parser, and :meth:`print_help` prints the full help output."
msgstr ""
"Las opciones de versión (``-v`` y ` --version``) se añaden cuando "
"*versión* se establece en el constructor de :class:`ArgumentParser` ."

#: ../../source/argparse/index.rst:516
msgid ""
"The ``ArgumentParser`` uses a formatter class to control the appearance "
"of the help output. To change the class, pass ``formatter_class`` when "
"instantiating the ``ArgumentParser``."
msgstr ""
"Ambas formas de imprimen la versión del programa, y continuación salen "
"del programa."

#: ../../source/argparse/index.rst:521
msgid ""
"For example, the ``RawDescriptionHelpFormatter`` bypasses the line "
"wrapping provided by the default formatter."
msgstr ""

#: ../../source/argparse/index.rst
msgid "argparse_raw_description_help_formatter.py"
msgstr ""

#: ../../source/argparse/index.rst:528
msgid ""
"All text in the description and epilog of the command will be left "
"unchanged."
msgstr ""

#: ../../source/argparse/index.rst:555
msgid "The ``RawTextHelpFormatter`` treats all help text as pre-formatted."
msgstr ""

#: ../../source/argparse/index.rst
msgid "argparse_raw_text_help_formatter.py"
msgstr ""

#: ../../source/argparse/index.rst:561
msgid "The help text for the ``-a`` argument is no longer wrapped neatly."
msgstr ""

#: ../../source/argparse/index.rst:590
msgid ""
"Raw formatters may be useful for applications with examples in the "
"description or epilog, where changing the format of the text may make the"
" examples invalid."
msgstr ""

#: ../../source/argparse/index.rst:594
msgid ""
"The ``MetavarTypeHelpFormatter`` prints the name of the type for each "
"option, instead of the destination variable, which can be useful for "
"applications with a lot of options of different types."
msgstr ""

#: ../../source/argparse/index.rst
msgid "argparse_metavar_type_help_formatter.py"
msgstr ""

#: ../../source/argparse/index.rst:602
msgid ""
"Rather than display the value of ``dest``, the name of the type "
"associated with the option is printed."
msgstr ""

#: ../../source/argparse/index.rst:626
msgid "Parser Organization"
msgstr "Organización Analizador"

#: ../../source/argparse/index.rst:628
msgid ""
"``argparse`` includes several features for organizing argument parsers, "
"to make implementation easier or to improve the usability of the help "
"output."
msgstr ""
":mod:`argparse` incluye varias características para organizar sus "
"programas de análisis de argumentos, para hacer la aplicación más fácil o"
" para mejorar la usabilidad de la salida de ayuda."

#: ../../source/argparse/index.rst:633
msgid "Sharing Parser Rules"
msgstr "Compartiendo Reglas del analizador"

#: ../../source/argparse/index.rst:635
#, fuzzy
msgid ""
"Programmers commonly need to implement a suite of command-line tools that"
" all take a set of arguments, and then specialize in some way. For "
"example, if the programs all need to authenticate the user before taking "
"any real action, they would all need to support ``--user`` and "
"``--password`` options.  Rather than add the options explicitly to every "
"``ArgumentParser``, it is possible to define a parent parser with the "
"shared options, and then have the parsers for the individual programs "
"inherit from its options."
msgstr ""
"Es común poner en práctica que un conjunto de programas de línea de "
"comandos tomen todos un conjunto de argumentos, y luego especializarse en"
" alguna manera. Por ejemplo, si los programas de tienen la necesidad de "
"autenticar al usuario antes de tomar cualquier acción real, tendrían "
"todos la necesidad de soportar a las opciones ``--password`` y --user`` ."
" En lugar de agregar las opciones de manera explícita a todas "
":class:`ArgumentParser`, puede definir un programa de análisis "
"\"padre\"con las opciones comunes, y luego tener los programas de "
"análisis de los programas individuales hereden sus opciones."

#: ../../source/argparse/index.rst:644
#, fuzzy
msgid ""
"The first step is to set up the parser with the shared argument "
"definitions.  Since each subsequent user of the parent parser is going to"
" try to add the same help options, causing an exception, automatic help "
"generation is turned off in the base parser."
msgstr ""
"El primer paso es configurar el analizador con las definiciones de "
"argumentos compartidos. Dado que cada usuario posterior del analizador de"
" los padres va a tratar de añadir las mismas opciones de ayuda, haciendo "
"una excepción, apagamos la generación automática de ayuda en el programa "
"de análisis de base."

#: ../../source/argparse/index.rst
#, fuzzy
msgid "argparse_parent_base.py"
msgstr ""
"Un programa para trabajar con directorios en el sistema de archivos "
"podría definir comandos para crear, eliminar y listar el contenido de un "
"directorio de la siguiente manera:"

#: ../../source/argparse/index.rst:653
msgid "Next, create another parser with ``parents`` set:"
msgstr ""
"A continuación, crear otro programa de análisis con los conjuntos "
"*padres*:"

#: ../../source/argparse/index.rst
msgid "argparse_uses_parent.py"
msgstr ""

#: ../../source/argparse/index.rst:659
msgid "And the resulting program takes all three options:"
msgstr "Y el programa resultante tiene las tres opciones:"

#: ../../source/argparse/index.rst:680
msgid "Conflicting Options"
msgstr "Conflicto de opciones"

#: ../../source/argparse/index.rst:682
msgid ""
"The previous example pointed out that adding two argument handlers to a "
"parser using the same argument name causes an exception.  The conflict "
"resolution behavior can be changed by passing a ``conflict_handler``.  "
"The two built-in handlers are ``error`` (the default), and ``resolve``, "
"which picks a handler based on the order they are added."
msgstr ""

#: ../../source/argparse/index.rst
msgid "argparse_conflict_handler_resolve.py"
msgstr ""
"El ejemplo anterior señaló que la adición de dos manejadores de "
"argumentos a un programa de análisis utilizando el mismo nombre de "
"argumento provoca una excepción. Cambiar el comportamiento de resolución "
"de conflictos mediante el paso a *conflict_handler*. Los dos "
"controladores incorporados son ``error`` (por defecto), y ``resolve``, "
"que recoge un controlador basado en el orden en que se agregan."

#: ../../source/argparse/index.rst:693
msgid ""
"Since the last handler with a given argument name is used, in this "
"example, the stand-alone option ``-b`` is masked by the alias for "
"``--long-b``."
msgstr ""
"Desde el último controlador con un nombre argumento dado es utilizado, en"
" este ejemplo la opción independiente ``-b`` está enmascarado por el "
"alias de ``--long-b``."

#: ../../source/argparse/index.rst:713
msgid ""
"Switching the order of the calls to ``add_argument()`` unmasks the stand-"
"alone option:"
msgstr ""
"Cambiando el orden de las llamadas a :func:`add_argument` desenmascara la"
" opción independiente:"

#: ../../source/argparse/index.rst
msgid "argparse_conflict_handler_resolve2.py"
msgstr ""

#: ../../source/argparse/index.rst:720
msgid "Now both options can be used together."
msgstr "Ahora ambas opciones se pueden utilizar juntas."

#: ../../source/argparse/index.rst:740
msgid "Argument Groups"
msgstr "Grupos de argumentos"

#: ../../source/argparse/index.rst:742
msgid ""
"``argparse`` combines the argument definitions into \"groups.\"  By "
"default, it uses two groups, with one for options and another for "
"required position-based arguments."
msgstr ""
":mod:`argparse` combina las definiciones de argumentos en\" grupos \". "
"Por defecto, se utiliza dos grupos, uno para las opciones y otra para los"
" argumentos basados en la posición deseada."

#: ../../source/argparse/index.rst
msgid "argparse_default_grouping.py"
msgstr ""

#: ../../source/argparse/index.rst:750
msgid ""
"The grouping is reflected in the separate \"positional arguments\" and "
"\"optional arguments\" sections of the help output."
msgstr ""
"La agrupación se refleja en los \"argumentos posicionales\" y "
"\"argumentos opcionales\" separadas de la sección de salida de la ayuda:"

#: ../../source/argparse/index.rst:774
msgid ""
"The grouping can be adjusted to make it more logical in the help, so that"
" related options or values are documented together.  The shared-option "
"example from earlier could be written using custom grouping so that the "
"authentication options are shown together in the help."
msgstr ""
"Se puede ajustar la agrupación para que sea más lógico en la ayuda, por "
"lo que las opciones o valores relacionados se documentan juntos. El "
"ejemplo de la opción compartida podría escribirse usando agrupación "
"personalizada para que las opciones de autenticación se muestren juntos "
"en la ayuda."

#: ../../source/argparse/index.rst:780
#, fuzzy
msgid ""
"Create the \"authentication\" group with ``add_argument_group()`` and "
"then add each of the authentication-related options to the group, instead"
" of the base parser."
msgstr ""
"Cree el grupo de \"autenticación\" con :func:`add_argument_group` y luego"
" añada cada una de las opciones relacionadas con la autenticación al "
"grupo, en lugar del analizador base."

#: ../../source/argparse/index.rst
#, fuzzy
msgid "argparse_parent_with_group.py"
msgstr ""
"Las opciones de ayuda (``-h`` y ``--help``) se añaden por defecto, pero "
"se puede desactivar configurando *add_help* como falso."

#: ../../source/argparse/index.rst:788
msgid ""
"The program using the group-based parent lists it in the ``parents`` "
"value, just as before."
msgstr ""
"El programa usando el grupo basado en padres enumera los valores en "
"*padres*, al igual que antes."

#: ../../source/argparse/index.rst
msgid "argparse_uses_parent_with_group.py"
msgstr ""

#: ../../source/argparse/index.rst:795
msgid "The help output now shows the authentication options together."
msgstr "Ahora la salida muestra la ayuda de las opciones de autenticación juntos."

#: ../../source/argparse/index.rst:817
msgid "Mutually Exclusive Options"
msgstr "Opciones mutuamente excluyentes"

#: ../../source/argparse/index.rst:819
#, fuzzy
msgid ""
"Defining mutually exclusive options is a special case of the option "
"grouping feature, and uses ``add_mutually_exclusive_group()`` instead of "
"``add_argument_group()``."
msgstr ""
"Definición de opciones mutuamente excluyentes, es un caso especial de la "
"función de la opción de agrupación, y utiliza "
":func:`add_mutually_exclusive_group` en lugar de :func:` "
"add_argument_group`."

#: ../../source/argparse/index.rst
msgid "argparse_mutually_exclusive.py"
msgstr ""

#: ../../source/argparse/index.rst:827
msgid ""
"``argparse`` enforces the mutual exclusivity, so that only one of the "
"options from the group can be given."
msgstr ""
":mod: `argparse` hace cumplir la exclusividad mutua para usted, por lo "
"que sólo una de las opciones del grupo se pueden dar."

#: ../../source/argparse/index.rst:867
msgid "Nesting Parsers"
msgstr "Analizadores de la jerarquización"

#: ../../source/argparse/index.rst:869
msgid ""
"The parent parser approach described earlier is one way to share options "
"between related commands.  An alternate approach is to combine the "
"commands into a single program, and use sub-parsers to handle each "
"portion of the command-line.  The result works in the way ``svn``, "
"``hg``, and other programs with multiple command-line actions, or sub-"
"commands, does."
msgstr ""
"El enfoque parser matriz descrito anteriormente es una forma de compartir"
" las opciones entre comandos relacionados. Un enfoque alternativo es "
"combinar los comandos en un solo programa, y utilizar subparsers para "
"manejar cada parte de la línea de comandos. El resultado funciona de la "
"forma que lo hace ``svn``, `` hg``, y otros programas con múltiples "
"acciones de línea de comandos, o sub-comandos."

#: ../../source/argparse/index.rst:876
msgid ""
"A program to work with directories on the file system might define "
"commands for creating, deleting, and listing the contents of a directory."
msgstr ""

#: ../../source/argparse/index.rst
msgid "argparse_subparsers.py"
msgstr ""
"Un programa para trabajar con directorios en el sistema de archivos "
"podría definir comandos para crear, eliminar y listar el contenido de un "
"directorio de la siguiente manera:"

#: ../../source/argparse/index.rst:884
msgid ""
"The help output shows the named sub-parsers as \"commands\" that can be "
"specified on the command-line as positional arguments."
msgstr ""
"La salida de ayuda muestra los subparsers nombrados como \"comandos\" que"
" se pueden especificar en la línea de comandos como argumentos "
"posicionales."

#: ../../source/argparse/index.rst:908
msgid ""
"Each sub-parser also has its own help, describing the arguments and "
"options for that command."
msgstr ""
"Cada subparser también tiene su propia ayuda, que describe los argumentos"
" y opciones para ese comando."

#: ../../source/argparse/index.rst:931
#, fuzzy
msgid ""
"And when the arguments are parsed, the ``Namespace`` object returned by "
"``parse_args()`` includes only the values related to the command "
"specified."
msgstr ""
"Y cuando se analizan los argumentos, el objeto :class:`Namespace` "
"devuelto por :func:` parse_args` incluye sólo los valores relacionados "
"con el comando especificado."

#: ../../source/argparse/index.rst:949
msgid "Advanced Argument Processing"
msgstr "Procesamiento de Argumento Avanzado"

#: ../../source/argparse/index.rst:951
msgid ""
"The examples so far have shown simple Boolean flags, options with string "
"or numerical arguments, and positional arguments. ``argparse`` also "
"supports sophisticated argument specification for variable-length "
"argument list, enumerations, and constant values."
msgstr ""
"Los ejemplos hasta ahora han mostrado banderas booleanas simples y "
"opciones con cadenas o argumentos numéricos, y los argumentos "
"posicionales. :mod:`argparse` soporta especificación sofisticada de "
"argumentos para longitud variable de lista de argumentos, enumeraciones y"
" valores constantes también."

#: ../../source/argparse/index.rst:957
msgid "Variable Argument Lists"
msgstr "Listas de argumentos variables"

#: ../../source/argparse/index.rst:959
msgid ""
"A single argument definition can be configured to consume multiple "
"arguments on the command-line being parsed.  Set ``nargs`` to one of the "
"flag values from :table:`Flags for Variable Argument Definitions in "
"argparse`, based on the number of required or expected arguments."
msgstr ""

#: ../../source/argparse/index.rst
msgid "Flags for Variable Argument Definitions in argparse"
msgstr ""
"Puede configurar una única definición argumentos para consumir varios "
"argumentos en la línea de comandos que se analizan. Establecer *nargs * "
"hacia uno de estos valores de la bandera, basado en el número de "
"argumentos requeridos o esperados:"

#: ../../source/argparse/index.rst:967
msgid "Value"
msgstr "Valor"

#: ../../source/argparse/index.rst:967
msgid "Meaning"
msgstr "Significado"

#: ../../source/argparse/index.rst:969
msgid "``N``"
msgstr "``N``"

#: ../../source/argparse/index.rst:969
msgid "The absolute number of arguments (e.g., ``3``)."
msgstr "El número absoluto de argumentos (por ejemplo, `` 3``)."

#: ../../source/argparse/index.rst:970
msgid "``?``"
msgstr "``?``"

#: ../../source/argparse/index.rst:970
msgid "0 or 1 arguments"
msgstr "Argumentos 0 o 1"

#: ../../source/argparse/index.rst:971
msgid "``*``"
msgstr "``*``"

#: ../../source/argparse/index.rst:971
msgid "0 or all arguments"
msgstr "0 o todos los argumentos"

#: ../../source/argparse/index.rst:972
msgid "``+``"
msgstr "``+``"

#: ../../source/argparse/index.rst:972
msgid "All, and at least one, argument"
msgstr "Todos, y al menos un argumento"

#: ../../source/argparse/index.rst
msgid "argparse_nargs.py"
msgstr ""

#: ../../source/argparse/index.rst:979
msgid ""
"The parser enforces the argument count instructions and generates an "
"accurate syntax diagram as part of the command help text."
msgstr ""
"El analizador hace cumplir las instrucciones de conteo de argumento, y "
"genera un diagrama de sintaxis preciso como parte del texto de ayuda del "
"comando."

#: ../../source/argparse/index.rst:1062
msgid "Argument Types"
msgstr "Tipos de argumentos"

#: ../../source/argparse/index.rst:1064
#, fuzzy
msgid ""
"``argparse`` treats all argument values as strings, unless it is told to "
"convert the string to another type.  The ``type`` parameter to "
"``add_argument()`` defines a converter function, which is used by the "
"``ArgumentParser`` to transform the argument value from a string to some "
"other type."
msgstr ""
":mod:`argparse` trata todos los valores de los argumentos como cadenas, a"
" menos que usted le indique para convertir la cadena a otro tipo. El "
"parámetro *tipo* :func: `add_argument` espera una función de conversión "
"utilizada por :class:`ArgumentParser` para transformar el valor del "
"argumento de una cadena a algún otro tipo."

#: ../../source/argparse/index.rst
#, fuzzy
msgid "argparse_type.py"
msgstr ""
"Nombres de opción \"largo\", con más de un solo carácter en su nombre, se"
" manejan de la misma manera."

#: ../../source/argparse/index.rst:1074
msgid ""
"Any callable that takes a single string argument can be passed as "
"``type``, including built-in types like ``int`` and ``float`` or even "
"``open()``."
msgstr ""
"Cualquier exigible que toma un solo argumento de cadena se puede pasar "
"como *tipo*, que incluye tipos integrados como :func:`int`, :func:` "
"float` y :func: `File`."

#: ../../source/argparse/index.rst:1102
msgid ""
"If the type conversion fails, ``argparse`` raises an exception. "
"``TypeError`` and ``ValueError`` exceptions are trapped automatically and"
" converted to a simple error message for the user. Other exceptions, such"
" as the ``IOError`` in the next example where the input file does not "
"exist, must be handled by the caller."
msgstr ""

#: ../../source/argparse/index.rst:1139
msgid ""
"To limit an input argument to a value within a pre-defined set, use the "
"``choices`` parameter."
msgstr ""
"Para limitar un argumento de entrada a un valor dentro de un conjunto "
"predefinido, utilice parámetros *opciones *."

#: ../../source/argparse/index.rst
msgid "argparse_choices.py"
msgstr ""

#: ../../source/argparse/index.rst:1146
msgid ""
"If the argument to ``--mode`` is not one of the allowed values, an error "
"is generated and processing stops."
msgstr ""
"Si el argumento ``--mode`` no es uno de los valores permitidos, se genera"
" un error y el proceso se detiene."

#: ../../source/argparse/index.rst:1180
msgid "File Arguments"
msgstr "Argumentos de archivos"

#: ../../source/argparse/index.rst:1182
#, fuzzy
msgid ""
"Although ``file`` objects can be instantiated with a single string "
"argument, that does not include the access mode argument. ``FileType`` "
"provides a more flexible way of specifying that an argument should be a "
"file, including the mode and buffer size."
msgstr ""
"Aunque objetos de :class:`File` pueden crear instancias con un único "
"argumento de cadena, que no le permiten especificar el modo de acceso. "
":class:`FileType` le da una forma más flexible de especificar que un "
"argumento debe ser un archivo, incluyendo el tamaño y el modo de búfer."

#: ../../source/argparse/index.rst
#, fuzzy
msgid "argparse_FileType.py"
msgstr ""
"Nombres de opción \"largo\", con más de un solo carácter en su nombre, se"
" manejan de la misma manera."

#: ../../source/argparse/index.rst:1191
#, fuzzy
msgid ""
"The value associated with the argument name is the open file handle. The "
"application is responsible for closing the file when it is no longer "
"being used."
msgstr ""
"El valor asociado con el nombre de argumento es el identificador de "
"archivo abierto. Usted es responsable de cerrar el archivo cuando haya "
"terminado con él."

#: ../../source/argparse/index.rst:1236
msgid "Custom Actions"
msgstr "Acciones personalizadas"

#: ../../source/argparse/index.rst:1238
msgid ""
"In addition to the built-in actions described earlier, custom actions can"
" be defined by providing an object that implements the Action API. The "
"object passed to ``add_argument()`` as ``action`` should take parameters "
"describing the argument being defined (all the same arguments given to "
"``add_argument()``) and return a callable object that takes as parameters"
" the ``parser`` processing the arguments, the ``namespace`` holding the "
"parse results, the ``value`` of the argument being acted on, and the "
"``option_string`` that triggered the action."
msgstr ""

#: ../../source/argparse/index.rst:1247
msgid ""
"A class ``Action`` is provided as a convenient starting point for "
"defining new actions.  The constructor handles the argument definitions, "
"so only ``__call__()`` needs to be overridden in the subclass."
msgstr ""
"Una clase :class:`action` se ofrece como un punto de partida para la "
"definición de nuevas acciones. El constructor se encarga de las "
"definiciones de argumentos, por lo que sólo necesita sobrescribir "
":func:`__call__` en la subclase."

#: ../../source/argparse/index.rst
#, fuzzy
msgid "argparse_custom_action.py"
msgstr ""
"Nombres de opción \"largo\", con más de un solo carácter en su nombre, se"
" manejan de la misma manera."

#: ../../source/argparse/index.rst:1256
msgid ""
"The type of ``values`` depends on the value of ``nargs``.  If the "
"argument allows multiple values, ``values`` will be a list even if it "
"only contains one item."
msgstr ""
"El valor de *option_string* también depende de la especificación original"
" del argumento. Para posicional, se requiere, argumentos, *option_string*"
" siempre es ``None``."

#: ../../source/argparse/index.rst:1260
msgid ""
"The value of ``option_string`` also depends on the original argument "
"specification.  For positional required arguments, ``option_string`` is "
"always ``None``."
msgstr ""

#: ../../source/argparse/index.rst:1299
msgid ":pydoc:`argparse`"
msgstr ""

#: ../../source/argparse/index.rst:1301
#, fuzzy
msgid ":mod:`configparser` -- Read and write configuration files."
msgstr ""
":mod:`shlex` hace que sea fácil para dividir la cadena almacenada en el "
"archivo de configuración."

#: ../../source/argparse/index.rst:1303
msgid ":mod:`shlex` -- Parse shell-like syntaxes."
msgstr ""
"La página PyPI para la versión de argparse desde fuera de la biblioteca "
"estándar. Esta versión es compatible con las versiones anteriores de "
"Python, y se puede instalar por separado."

#: ../../source/argparse/index.rst:1305
msgid ":ref:`Python 2 to 3 porting notes for argparse <porting-argparse>`"
msgstr ""

#~ msgid "2.7 and later"
#~ msgstr "2.7 y posteriores"

#~ msgid "Comparing with optparse"
#~ msgstr "Comparando con optparse"

#~ msgid ""
#~ "The API for :mod:`argparse` is similar"
#~ " to the one provided by "
#~ ":mod:`optparse`, and in many cases "
#~ ":mod:`argparse` can be used as a "
#~ "straightforward replacement by updating the"
#~ " names of the classes and methods "
#~ "used.  There are a few places "
#~ "where direct compatibility could not be"
#~ " preserved as new features were "
#~ "added, however."
#~ msgstr ""
#~ "La API de :mod:`argparse` es similar "
#~ "a la proporcionada por :mod:`optparse`, "
#~ "y en muchos casos :mod:`argparse` se "
#~ "puede utilizar como un reemplazo directo"
#~ " mediante la actualización de los "
#~ "nombres de las clases y los "
#~ "métodos utilizados.  Sin embargo, hay "
#~ "algunos lugares donde la compatibilidad "
#~ "directa no podía ser preservada como "
#~ "en las nuevas características."

#~ msgid ""
#~ "You will have to decide whether to"
#~ " upgrade existing programs on a "
#~ "case-by-case basis.  If you have "
#~ "written extra code to work around "
#~ "limitations of :mod:`optparse`, you may "
#~ "want to upgrade to reduce the "
#~ "amount of code you need to "
#~ "maintain.  New programs should probably "
#~ "use argparse, if it is available "
#~ "on all deployment platforms."
#~ msgstr ""
#~ "Usted tendrá que decidir si se "
#~ "debe actualizar los programas existentes "
#~ "en una base de caso por caso. "
#~ "Si usted ha escrito código extra "
#~ "para evitar limitaciones de: mod: "
#~ "`optparse`, es posible que desee "
#~ "actualizar a reducir la cantidad de "
#~ "código que necesita mantener."

#~ msgid ""
#~ ":mod:`argparse` is a complete argument "
#~ "*processing* library. Arguments can trigger"
#~ " different actions, specified by the "
#~ "*action* argument to :func:`add_argument()`. "
#~ "Supported actions include storing the "
#~ "argument (singly, or as part of a"
#~ " list), storing a constant value when"
#~ " the argument is encountered (including "
#~ "special handling for true/false values "
#~ "for boolean switches), counting the "
#~ "number of times an argument is "
#~ "seen, and calling a callback."
#~ msgstr ""
#~ ":mod:`argparse` es una librería completa "
#~ "de *procesado* de argumentos. Los "
#~ "argumentos pueden desencadenar diferentes "
#~ "acciones, especificada por el argumento "
#~ "*acción* de :func:`add_argument()`. Las "
#~ "acciones soportadas incluyen almacenar el "
#~ "argumento (individualmente, o como parte "
#~ "de una lista), almacenar un valor "
#~ "constante cuando se encuentra el "
#~ "argumento (incluyendo un tratamiento especial"
#~ " para los verdaderos valores / falso"
#~ " para interruptores booleanos), contando el"
#~ " número de veces que un argumento "
#~ "es visto, y llamando a una "
#~ "devolución de llamada."

#~ msgid ""
#~ "The default action is to store the"
#~ " argument value. In this case, if "
#~ "a type is provided, the value is"
#~ " converted to that type before it "
#~ "is stored. If the *dest* argument "
#~ "is provided, the value is saved to"
#~ " an attribute of that name on "
#~ "the Namespace object returned when the"
#~ " command line arguments are parsed."
#~ msgstr ""
#~ "La acción predeterminada es almacenar el"
#~ " valor del argumento. En este caso,"
#~ " si se proporciona un tipo, el "
#~ "valor se convierte a ese tipo "
#~ "antes de que se almacene. Si se"
#~ " proporciona el argumento *dest*, el "
#~ "valor se guarda en un atributo del"
#~ " mismo nombre en el objeto de "
#~ "espacio de nombres devueltos cuando se"
#~ " analizan los argumentos de la línea"
#~ " de comandos."

#~ msgid ""
#~ "Here is a simple example with 3"
#~ " different options: a boolean option "
#~ "(``-a``), a simple string option "
#~ "(``-b``), and an integer option "
#~ "(``-c``)."
#~ msgstr ""
#~ "Aquí está un ejemplo sencillo con "
#~ "3 opciones diferentes: una opción "
#~ "booleana (``-a``), una opción de cadena"
#~ " sencilla (``-b``), y una opción "
#~ "entero (``-c``)."

#~ msgid ""
#~ "One area in which :mod:`argparse` "
#~ "differs from :mod:`optparse` is the "
#~ "treatment of non-optional argument "
#~ "values.  While :mod:`optparse` sticks to "
#~ "option parsing, :mod:`argparse` is a "
#~ "full command-line argument parser tool,"
#~ " and handles non-optional arguments "
#~ "as well."
#~ msgstr ""
#~ "Un área en la que :mod: `argparse`"
#~ " difiere de :mod:` optparse` es el"
#~ " tratamiento de valores de argumento "
#~ "no opcional. Mientras :mod:`optparse` se "
#~ "pega a la opción de análisis, "
#~ ":mod:`argparse` es una herramienta completa"
#~ " de análisis de argumentos de línea"
#~ " de comandos, y maneja argumentos no"
#~ " opcionales también."

#~ msgid ""
#~ "In the examples so far, the list"
#~ " of arguments given to the parser "
#~ "have come from a list passed in"
#~ " explicitly, or were taken implicitly "
#~ "from :ref:`sys.argv <sys-argv>`.  Passing "
#~ "the list explicitly is useful when "
#~ "you are using :mod:`argparse` to process"
#~ " command line-like instructions that "
#~ "do not come from the command line"
#~ " (such as in a configuration file)."
#~ msgstr ""
#~ "En los ejemplos hasta el momento, "
#~ "la lista de argumentos dados al "
#~ "analizador han venido de una lista "
#~ "aprobada en forma explícita o "
#~ "implícitamente se tomaron a partir de"
#~ " :ref:`sys.argv <sys-argv>`. Al pasar "
#~ "la lista de manera explícita es "
#~ "útil cuando se utiliza :mod:`argparse` "
#~ "para procesar instrucciones de línea de"
#~ " comandos como que no provienen de"
#~ " la línea de comandos (como en "
#~ "un archivo de configuración)."

#~ msgid ""
#~ "An alternative to processing the "
#~ "configuration file yourself is to tell"
#~ " :mod:`argparse` how to recognize an "
#~ "argument that specifies an input file"
#~ " containing a set of arguments to "
#~ "be processed using *fromfile_prefix_chars*."
#~ msgstr ""
#~ "Una alternativa para el procesamiento de"
#~ " la configuración del archivo es "
#~ "decirle usted mismo a :mod:`argparse` "
#~ "cómo reconocer un argumento que "
#~ "especifica un archivo de entrada que "
#~ "contiene un conjunto de argumentos para"
#~ " ser procesados utilizando "
#~ "*fromfile_prefix_chars*."

#~ msgid ""
#~ ":mod:`argparse` will automatically add options"
#~ " to generate help and show the "
#~ "version information for your application, "
#~ "if configured to do so."
#~ msgstr ""
#~ ":mod:`argparse` añadirá automáticamente las "
#~ "opciones para generar ayuda y mostrar"
#~ " la información de versión de la "
#~ "aplicación, si está configurado para "
#~ "hacerlo."

#~ msgid ""
#~ "The *add_help* argument to "
#~ ":class:`ArgumentParser` controls the help-"
#~ "related options."
#~ msgstr ""
#~ "El argumento *add_help* de "
#~ ":class:`ArgumentParser` controla las opciones "
#~ "de ayuda relacionados."

#~ msgid ""
#~ "If the type conversion fails, "
#~ ":mod:`argparse` raises an exception. "
#~ ":ref:`TypeError <exceptions-TypeError>` and "
#~ ":ref:`ValueError <exceptions-ValueError>` exceptions"
#~ " are trapped automatically and converted"
#~ " to a simple error message for "
#~ "the user.  Other exceptions, such as "
#~ "the :ref:`IOError <exceptions-IOError>` in "
#~ "the example below where the input "
#~ "file does not exist, must be "
#~ "handled by the caller."
#~ msgstr ""
#~ "Si la conversión de tipo de falla,"
#~ " mod:`argparse` lanza una excepción. "
#~ ":ref:`TypeError <exceptions-TypeError>` y "
#~ ":ref:`ValueError <exceptions-ValueError>` "
#~ "excepciones son atrapadas de forma "
#~ "automática y se convierten en un "
#~ "mensaje de error simple para el "
#~ "usuario. Otras excepciones, como :ref:`IOError"
#~ " <exceptions-IOError>` en el siguiente "
#~ "ejemplo, donde no existe el archivo "
#~ "de entrada, deben ser manejadas por "
#~ "la persona que llama."

#~ msgid ""
#~ "In addition to the built-in "
#~ "actions described earlier, you can "
#~ "define custom actions by providing an"
#~ " object that implements the Action "
#~ "API. The object passed to "
#~ ":func:`add_argument` as *action* should take"
#~ " parameters describing the argument being"
#~ " defined (all of the same arguments"
#~ " given to :func:`add_argument`) and return"
#~ " a callable object that takes as "
#~ "parameters the *parser* processing the "
#~ "arguments, the *namespace* holding the "
#~ "parse results, the *value* of the "
#~ "argument being acted on, and the "
#~ "*option_string* that triggered the action."
#~ msgstr ""
#~ "Además de las acciones integradas "
#~ "descritas anteriormente, se pueden definir "
#~ "acciones personalizadas, proporcionando un "
#~ "objeto que implementa la API de "
#~ "Acción. El objeto pasado a "
#~ ":func:`add_argument` como *acción* debería "
#~ "tomar parámetros que describen el "
#~ "argumento que se definen (todos los "
#~ "mismos argumentos dados a "
#~ ":func:`add_argument`) y devuelven un objeto"
#~ " invocable que toma como parámetros "
#~ "el *parser* procesando los argumentos, "
#~ "el *espacio de nombres* sosteniendo los"
#~ " resultados de análisis sintáctico, el "
#~ "*valor* del argumento que se actúa "
#~ "en el *option_string* que desencadenó la"
#~ " acción."

#~ msgid ""
#~ "The type of *values* depends on "
#~ "the value of *nargs*.  If the "
#~ "argument allows multiple values, *values* "
#~ "will be a list even if it "
#~ "only contains one item."
#~ msgstr ""
#~ "El tipo de *valores* depende del "
#~ "valor de *nargs *. Si el argumento"
#~ " permite múltiples valores, los *valores*"
#~ " serán una lista, incluso si sólo "
#~ "contiene un elemento."

#~ msgid "`argparse <http://docs.python.org/library/argparse.html>`_"
#~ msgstr "`argparse <http://docs.python.org/library/argparse.html>`_"

#~ msgid "The standard library documentation for this module."
#~ msgstr "La documentación de la biblioteca estándar para este módulo."

#~ msgid "`original argparse <http://pypi.python.org/pypi/argparse>`__"
#~ msgstr "`original argparse <http://pypi.python.org/pypi/argparse>`__"

#~ msgid ":mod:`ConfigParser`"
#~ msgstr ":mod:`ConfigParser`"

#~ msgid "Read and write configuration files."
#~ msgstr "Leer y escribir archivos de configuración."

